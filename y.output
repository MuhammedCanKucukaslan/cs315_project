Terminals unused in grammar

    LCOM
    RCOM
    DOT
    SIGN
    SPACE
    ANYCHAR
    DIGIT
    ALPHABETICAL
    ASCII
    STRING_WORD


State 45 conflicts: 1 reduce/reduce
State 47 conflicts: 6 reduce/reduce
State 48 conflicts: 1 reduce/reduce
State 54 conflicts: 1 reduce/reduce
State 56 conflicts: 1 shift/reduce
State 62 conflicts: 5 reduce/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce, 2 reduce/reduce
State 99 conflicts: 1 reduce/reduce
State 146 conflicts: 1 shift/reduce
State 151 conflicts: 1 shift/reduce
State 152 conflicts: 2 shift/reduce
State 153 conflicts: 1 shift/reduce
State 183 conflicts: 1 shift/reduce
State 184 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: STATEMENTS

    2 STATEMENTS: STATEMENT
    3           | STATEMENTS STATEMENT
    4           | STATEMENTS FUNCTION_DEFINITION

    5 STATEMENT: MATCHED
    6          | UNMATCHED

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED
    8        | NON_IF_STATEMENT

    9 UNMATCHED: IF LP LOGICAL_EXPRESSION RP STATEMENT
   10          | IF LP LOGICAL_EXPRESSION RP MATCHED ELSE UNMATCHED

   11 NON_IF_STATEMENT: ITERATIVE_STATEMENT
   12                 | LB STATEMENTS RB
   13                 | DECLARATIVE_STATEMENT SEMICOLON
   14                 | ASSIGNMENT_STATEMENT SEMICOLON
   15                 | FUNCTION_CALL SEMICOLON
   16                 | RETURN_STATEMENT SEMICOLON

   17 DECLARATIVE_STATEMENT: TYPE VAR_NAME

   18 ITERATIVE_STATEMENT: WHILE LP LOGICAL_EXPRESSION RP MATCHED
   19                    | FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

   20 ASSIGNMENT_STATEMENT: VAR_NAME ASSIGN_OP EXPRESSION
   21                     | VAR_NAME ASSIGN_OP FUNCTION_CALL
   22                     | DECLARATIVE_STATEMENT ASSIGN_OP EXPRESSION
   23                     | DECLARATIVE_STATEMENT ASSIGN_OP FUNCTION_CALL

   24 EXPRESSION: LP EXPRESSION RP
   25           | LOGICAL_COMPOSITION
   26           | ARITHMETIC_COMPOSITION
   27           | VALUE

   28 ARITHMETIC_EXPRESSION: ARITHMETIC_COMPOSITION
   29                      | ARITHMETIC_FACTOR

   30 ARITHMETIC_FACTOR: VAR_NAME
   31                  | INTEGER
   32                  | FLOAT_NUMBER
   33                  | LP ARITHMETIC_EXPRESSION RP
   34                  | FUNCTION_CALL

   35 ARITHMETIC_COMPOSITION: ARITHMETIC_FACTOR MULTIPLICATIVE_OPERATOR ARITHMETIC_FACTOR
   36                       | ARITHMETIC_COMPOSITION MULTIPLICATIVE_OPERATOR ARITHMETIC_FACTOR
   37                       | ARITHMETIC_COMPOSITION MULTIPLICATIVE_OPERATOR ARITHMETIC_TERM

   38 ARITHMETIC_TERM: ARITHMETIC_TERM ADDITIVE_OPERATOR ARITHMETIC_FACTOR
   39                | ARITHMETIC_FACTOR ADDITIVE_OPERATOR ARITHMETIC_FACTOR

   40 ADDITIVE_OPERATOR: ADD
   41                  | SUB

   42 MULTIPLICATIVE_OPERATOR: MUL
   43                        | DIV

   44 LOGICAL_EXPRESSION: LOGICAL_COMPOSITION
   45                   | LOGICAL_FACTOR

   46 LOGICAL_FACTOR: VAR_NAME
   47               | BOOLEAN_VAL
   48               | RELATIONAL_EXPRESSION
   49               | NOT LOGICAL_EXPRESSION
   50               | LP LOGICAL_EXPRESSION RP
   51               | FUNCTION_CALL

   52 LOGICAL_COMPOSITION: LOGICAL_COMP_DUO
   53                    | LOGICAL_COMPOSITION OR LOGICAL_FACTOR
   54                    | LOGICAL_COMPOSITION OR LOGICAL_TERM

   55 LOGICAL_TERM: LOGICAL_TERM_DUO
   56             | LOGICAL_TERM AND LOGICAL_FACTOR

   57 LOGICAL_TERM_DUO: LOGICAL_FACTOR AND LOGICAL_FACTOR

   58 LOGICAL_COMP_DUO: LOGICAL_FACTOR OR LOGICAL_FACTOR

   59 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION RELATIONAL_OPERATOR ARITHMETIC_EXPRESSION
   60                      | EQUIVALANCE_EXPRESSION

   61 RELATIONAL_OPERATOR: LT
   62                    | GT
   63                    | GE
   64                    | LE

   65 EQUIVALANCE_EXPRESSION: EXPRESSION EQ EXPRESSION

   66 TYPE: PRIMITIVE_TYPE
   67     | VOID

   68 PRIMITIVE_TYPE: INT
   69               | FLOAT
   70               | BOOL
   71               | STR

   72 VALUE: VAR_NAME
   73      | CONSTANT

   74 CONSTANT: BOOLEAN_VAL
   75         | FLOAT_NUMBER
   76         | INTEGER
   77         | STRING

   78 BOOLEAN_VAL: TRUE
   79            | FALSE

   80 ARGUMENTS: TYPE VAR_NAME
   81          | ARGUMENTS COMMA TYPE VAR_NAME

   82 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP LB STATEMENTS RB
   83                    | FUNCTION TYPE VAR_NAME LP RP LB STATEMENTS RB

   84 PARAMETERS: VALUE
   85           | PARAMETERS COMMA VALUE

   86 FUNCTION_CALL: VAR_NAME LP RP
   87              | VAR_NAME LP PARAMETERS RP
   88              | PRIMITIVE_FUNCTION_CALL

   89 RETURN_STATEMENT: RETURN EXPRESSION
   90                 | RETURN FUNCTION_CALL

   91 PRIMITIVE_FUNCTION_CALL: GET_HEADINGS LP RP
   92                        | GET_ALTITUDE LP RP
   93                        | GET_TEMPERATURE LP RP
   94                        | SET_VERTICALCLIMB LP ARITHMETIC_EXPRESSION RP
   95                        | SET_HORIZONTAL LP ARITHMETIC_EXPRESSION RP
   96                        | SET_HEADING LP LOGICAL_EXPRESSION RP
   97                        | SET_SPRAY LP LOGICAL_EXPRESSION RP
   98                        | CONNECT LP STRING COMMA STRING RP
   99                        | SLEEP LP ARITHMETIC_EXPRESSION RP
  100                        | SCAN_NEXT LP RP
  101                        | PRINT_OUT LP EXPRESSION RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND (258) 56 57
    OR (259) 53 54 58
    LP (260) 7 9 10 18 19 24 33 50 82 83 86 87 91 92 93 94 95 96 97 98 99 100 101
    RP (261) 7 9 10 18 19 24 33 50 82 83 86 87 91 92 93 94 95 96 97 98 99 100 101
    LB (262) 12 82 83
    RB (263) 12 82 83
    LCOM (264)
    RCOM (265)
    DOT (266)
    SIGN (267)
    COMMA (268) 81 85 98
    SEMICOLON (269) 13 14 15 16 19
    ADD (270) 40
    SUB (271) 41
    MUL (272) 42
    DIV (273) 43
    SPACE (274)
    ANYCHAR (275)
    LT (276) 61
    LE (277) 64
    GT (278) 62
    GE (279) 63
    EQ (280) 65
    NOT (281) 49
    ASSIGN_OP (282) 20 21 22 23
    DIGIT (283)
    INTEGER (284) 31 76
    ALPHABETICAL (285)
    ASCII (286)
    STRING_WORD (287)
    STRING (288) 77 98
    VAR_NAME (289) 17 20 21 30 46 72 80 81 82 83 86 87
    FLOAT_NUMBER (290) 32 75
    IF (291) 7 9 10
    WHILE (292) 18
    FOR (293) 19
    ELSE (294) 7 10
    VOID (295) 67
    INT (296) 68
    FLOAT (297) 69
    BOOL (298) 70
    STR (299) 71
    TRUE (300) 78
    FALSE (301) 79
    FUNCTION (302) 82 83
    RETURN (303) 89 90
    GET_HEADINGS (304) 91
    GET_ALTITUDE (305) 92
    GET_TEMPERATURE (306) 93
    SET_VERTICALCLIMB (307) 94
    SET_HORIZONTAL (308) 95
    SET_HEADING (309) 96
    SET_SPRAY (310) 97
    CONNECT (311) 98
    SLEEP (312) 99
    SCAN_NEXT (313) 100
    PRINT_OUT (314) 101


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    PROGRAM (61)
        on left: 1
        on right: 0
    STATEMENTS (62)
        on left: 2 3 4
        on right: 1 3 4 12 82 83
    STATEMENT (63)
        on left: 5 6
        on right: 2 3 9
    MATCHED (64)
        on left: 7 8
        on right: 5 7 10 18 19
    UNMATCHED (65)
        on left: 9 10
        on right: 6 10
    NON_IF_STATEMENT (66)
        on left: 11 12 13 14 15 16
        on right: 8 19
    DECLARATIVE_STATEMENT (67)
        on left: 17
        on right: 13 22 23
    ITERATIVE_STATEMENT (68)
        on left: 18 19
        on right: 11
    ASSIGNMENT_STATEMENT (69)
        on left: 20 21 22 23
        on right: 14
    EXPRESSION (70)
        on left: 24 25 26 27
        on right: 20 22 24 65 89 101
    ARITHMETIC_EXPRESSION (71)
        on left: 28 29
        on right: 33 59 94 95 99
    ARITHMETIC_FACTOR (72)
        on left: 30 31 32 33 34
        on right: 29 35 36 38 39
    ARITHMETIC_COMPOSITION (73)
        on left: 35 36 37
        on right: 26 28 36 37
    ARITHMETIC_TERM (74)
        on left: 38 39
        on right: 37 38
    ADDITIVE_OPERATOR (75)
        on left: 40 41
        on right: 38 39
    MULTIPLICATIVE_OPERATOR (76)
        on left: 42 43
        on right: 35 36 37
    LOGICAL_EXPRESSION (77)
        on left: 44 45
        on right: 7 9 10 18 19 49 50 96 97
    LOGICAL_FACTOR (78)
        on left: 46 47 48 49 50 51
        on right: 45 53 56 57 58
    LOGICAL_COMPOSITION (79)
        on left: 52 53 54
        on right: 25 44 53 54
    LOGICAL_TERM (80)
        on left: 55 56
        on right: 54 56
    LOGICAL_TERM_DUO (81)
        on left: 57
        on right: 55
    LOGICAL_COMP_DUO (82)
        on left: 58
        on right: 52
    RELATIONAL_EXPRESSION (83)
        on left: 59 60
        on right: 48
    RELATIONAL_OPERATOR (84)
        on left: 61 62 63 64
        on right: 59
    EQUIVALANCE_EXPRESSION (85)
        on left: 65
        on right: 60
    TYPE (86)
        on left: 66 67
        on right: 17 80 81 82 83
    PRIMITIVE_TYPE (87)
        on left: 68 69 70 71
        on right: 66
    VALUE (88)
        on left: 72 73
        on right: 27 84 85
    CONSTANT (89)
        on left: 74 75 76 77
        on right: 73
    BOOLEAN_VAL (90)
        on left: 78 79
        on right: 47 74
    ARGUMENTS (91)
        on left: 80 81
        on right: 81 82
    FUNCTION_DEFINITION (92)
        on left: 82 83
        on right: 4
    PARAMETERS (93)
        on left: 84 85
        on right: 85 87
    FUNCTION_CALL (94)
        on left: 86 87 88
        on right: 15 21 23 34 51 90
    RETURN_STATEMENT (95)
        on left: 89 90
        on right: 16
    PRIMITIVE_FUNCTION_CALL (96)
        on left: 91 92 93 94 95 96 97 98 99 100 101
        on right: 88


State 0

    0 $accept: . PROGRAM $end

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    PROGRAM                  go to state 23
    STATEMENTS               go to state 24
    STATEMENT                go to state 25
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 1

   12 NON_IF_STATEMENT: LB . STATEMENTS RB

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENTS               go to state 37
    STATEMENT                go to state 25
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 2

   20 ASSIGNMENT_STATEMENT: VAR_NAME . ASSIGN_OP EXPRESSION
   21                     | VAR_NAME . ASSIGN_OP FUNCTION_CALL
   86 FUNCTION_CALL: VAR_NAME . LP RP
   87              | VAR_NAME . LP PARAMETERS RP

    LP         shift, and go to state 38
    ASSIGN_OP  shift, and go to state 39


State 3

    7 MATCHED: IF . LP LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED
    9 UNMATCHED: IF . LP LOGICAL_EXPRESSION RP STATEMENT
   10          | IF . LP LOGICAL_EXPRESSION RP MATCHED ELSE UNMATCHED

    LP  shift, and go to state 40


State 4

   18 ITERATIVE_STATEMENT: WHILE . LP LOGICAL_EXPRESSION RP MATCHED

    LP  shift, and go to state 41


State 5

   19 ITERATIVE_STATEMENT: FOR . LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

    LP  shift, and go to state 42


State 6

   67 TYPE: VOID .

    $default  reduce using rule 67 (TYPE)


State 7

   68 PRIMITIVE_TYPE: INT .

    $default  reduce using rule 68 (PRIMITIVE_TYPE)


State 8

   69 PRIMITIVE_TYPE: FLOAT .

    $default  reduce using rule 69 (PRIMITIVE_TYPE)


State 9

   70 PRIMITIVE_TYPE: BOOL .

    $default  reduce using rule 70 (PRIMITIVE_TYPE)


State 10

   71 PRIMITIVE_TYPE: STR .

    $default  reduce using rule 71 (PRIMITIVE_TYPE)


State 11

   89 RETURN_STATEMENT: RETURN . EXPRESSION
   90                 | RETURN . FUNCTION_CALL

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 51
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 55
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 63
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 12

   91 PRIMITIVE_FUNCTION_CALL: GET_HEADINGS . LP RP

    LP  shift, and go to state 64


State 13

   92 PRIMITIVE_FUNCTION_CALL: GET_ALTITUDE . LP RP

    LP  shift, and go to state 65


State 14

   93 PRIMITIVE_FUNCTION_CALL: GET_TEMPERATURE . LP RP

    LP  shift, and go to state 66


State 15

   94 PRIMITIVE_FUNCTION_CALL: SET_VERTICALCLIMB . LP ARITHMETIC_EXPRESSION RP

    LP  shift, and go to state 67


State 16

   95 PRIMITIVE_FUNCTION_CALL: SET_HORIZONTAL . LP ARITHMETIC_EXPRESSION RP

    LP  shift, and go to state 68


State 17

   96 PRIMITIVE_FUNCTION_CALL: SET_HEADING . LP LOGICAL_EXPRESSION RP

    LP  shift, and go to state 69


State 18

   97 PRIMITIVE_FUNCTION_CALL: SET_SPRAY . LP LOGICAL_EXPRESSION RP

    LP  shift, and go to state 70


State 19

   98 PRIMITIVE_FUNCTION_CALL: CONNECT . LP STRING COMMA STRING RP

    LP  shift, and go to state 71


State 20

   99 PRIMITIVE_FUNCTION_CALL: SLEEP . LP ARITHMETIC_EXPRESSION RP

    LP  shift, and go to state 72


State 21

  100 PRIMITIVE_FUNCTION_CALL: SCAN_NEXT . LP RP

    LP  shift, and go to state 73


State 22

  101 PRIMITIVE_FUNCTION_CALL: PRINT_OUT . LP EXPRESSION RP

    LP  shift, and go to state 74


State 23

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 75


State 24

    1 PROGRAM: STATEMENTS .
    3 STATEMENTS: STATEMENTS . STATEMENT
    4           | STATEMENTS . FUNCTION_DEFINITION

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    FUNCTION           shift, and go to state 76
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    $default  reduce using rule 1 (PROGRAM)

    STATEMENT                go to state 77
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_DEFINITION      go to state 78
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 25

    2 STATEMENTS: STATEMENT .

    $default  reduce using rule 2 (STATEMENTS)


State 26

    5 STATEMENT: MATCHED .

    $default  reduce using rule 5 (STATEMENT)


State 27

    6 STATEMENT: UNMATCHED .

    $default  reduce using rule 6 (STATEMENT)


State 28

    8 MATCHED: NON_IF_STATEMENT .

    $default  reduce using rule 8 (MATCHED)


State 29

   13 NON_IF_STATEMENT: DECLARATIVE_STATEMENT . SEMICOLON
   22 ASSIGNMENT_STATEMENT: DECLARATIVE_STATEMENT . ASSIGN_OP EXPRESSION
   23                     | DECLARATIVE_STATEMENT . ASSIGN_OP FUNCTION_CALL

    SEMICOLON  shift, and go to state 79
    ASSIGN_OP  shift, and go to state 80


State 30

   11 NON_IF_STATEMENT: ITERATIVE_STATEMENT .

    $default  reduce using rule 11 (NON_IF_STATEMENT)


State 31

   14 NON_IF_STATEMENT: ASSIGNMENT_STATEMENT . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 32

   17 DECLARATIVE_STATEMENT: TYPE . VAR_NAME

    VAR_NAME  shift, and go to state 82


State 33

   66 TYPE: PRIMITIVE_TYPE .

    $default  reduce using rule 66 (TYPE)


State 34

   15 NON_IF_STATEMENT: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 35

   16 NON_IF_STATEMENT: RETURN_STATEMENT . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 36

   88 FUNCTION_CALL: PRIMITIVE_FUNCTION_CALL .

    $default  reduce using rule 88 (FUNCTION_CALL)


State 37

    3 STATEMENTS: STATEMENTS . STATEMENT
    4           | STATEMENTS . FUNCTION_DEFINITION
   12 NON_IF_STATEMENT: LB STATEMENTS . RB

    LB                 shift, and go to state 1
    RB                 shift, and go to state 85
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    FUNCTION           shift, and go to state 76
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENT                go to state 77
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_DEFINITION      go to state 78
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 38

   86 FUNCTION_CALL: VAR_NAME LP . RP
   87              | VAR_NAME LP . PARAMETERS RP

    RP            shift, and go to state 86
    INTEGER       shift, and go to state 87
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 89
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    VALUE        go to state 90
    CONSTANT     go to state 61
    BOOLEAN_VAL  go to state 91
    PARAMETERS   go to state 92


State 39

   20 ASSIGNMENT_STATEMENT: VAR_NAME ASSIGN_OP . EXPRESSION
   21                     | VAR_NAME ASSIGN_OP . FUNCTION_CALL

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 93
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 55
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 94
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 40

    7 MATCHED: IF LP . LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED
    9 UNMATCHED: IF LP . LOGICAL_EXPRESSION RP STATEMENT
   10          | IF LP . LOGICAL_EXPRESSION RP MATCHED ELSE UNMATCHED

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_EXPRESSION       go to state 96
    LOGICAL_FACTOR           go to state 97
    LOGICAL_COMPOSITION      go to state 98
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 41

   18 ITERATIVE_STATEMENT: WHILE LP . LOGICAL_EXPRESSION RP MATCHED

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_EXPRESSION       go to state 100
    LOGICAL_FACTOR           go to state 97
    LOGICAL_COMPOSITION      go to state 98
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 42

   19 ITERATIVE_STATEMENT: FOR LP . NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    NON_IF_STATEMENT         go to state 101
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 43

   24 EXPRESSION: LP . EXPRESSION RP
   33 ARITHMETIC_FACTOR: LP . ARITHMETIC_EXPRESSION RP
   50 LOGICAL_FACTOR: LP . LOGICAL_EXPRESSION RP

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 102
    ARITHMETIC_EXPRESSION    go to state 103
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_EXPRESSION       go to state 104
    LOGICAL_FACTOR           go to state 97
    LOGICAL_COMPOSITION      go to state 98
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 44

   49 LOGICAL_FACTOR: NOT . LOGICAL_EXPRESSION

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_EXPRESSION       go to state 105
    LOGICAL_FACTOR           go to state 97
    LOGICAL_COMPOSITION      go to state 98
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 45

   31 ARITHMETIC_FACTOR: INTEGER .
   76 CONSTANT: INTEGER .

    AND        reduce using rule 76 (CONSTANT)
    OR         reduce using rule 76 (CONSTANT)
    RP         reduce using rule 31 (ARITHMETIC_FACTOR)
    RP         [reduce using rule 76 (CONSTANT)]
    SEMICOLON  reduce using rule 76 (CONSTANT)
    EQ         reduce using rule 76 (CONSTANT)
    $default   reduce using rule 31 (ARITHMETIC_FACTOR)


State 46

   77 CONSTANT: STRING .

    $default  reduce using rule 77 (CONSTANT)


State 47

   30 ARITHMETIC_FACTOR: VAR_NAME .
   46 LOGICAL_FACTOR: VAR_NAME .
   72 VALUE: VAR_NAME .
   86 FUNCTION_CALL: VAR_NAME . LP RP
   87              | VAR_NAME . LP PARAMETERS RP

    LP  shift, and go to state 38

    AND        reduce using rule 46 (LOGICAL_FACTOR)
    AND        [reduce using rule 72 (VALUE)]
    OR         reduce using rule 46 (LOGICAL_FACTOR)
    OR         [reduce using rule 72 (VALUE)]
    RP         reduce using rule 30 (ARITHMETIC_FACTOR)
    RP         [reduce using rule 46 (LOGICAL_FACTOR)]
    RP         [reduce using rule 72 (VALUE)]
    SEMICOLON  reduce using rule 46 (LOGICAL_FACTOR)
    SEMICOLON  [reduce using rule 72 (VALUE)]
    EQ         reduce using rule 46 (LOGICAL_FACTOR)
    EQ         [reduce using rule 72 (VALUE)]
    $default   reduce using rule 30 (ARITHMETIC_FACTOR)


State 48

   32 ARITHMETIC_FACTOR: FLOAT_NUMBER .
   75 CONSTANT: FLOAT_NUMBER .

    AND        reduce using rule 75 (CONSTANT)
    OR         reduce using rule 75 (CONSTANT)
    RP         reduce using rule 32 (ARITHMETIC_FACTOR)
    RP         [reduce using rule 75 (CONSTANT)]
    SEMICOLON  reduce using rule 75 (CONSTANT)
    EQ         reduce using rule 75 (CONSTANT)
    $default   reduce using rule 32 (ARITHMETIC_FACTOR)


State 49

   78 BOOLEAN_VAL: TRUE .

    $default  reduce using rule 78 (BOOLEAN_VAL)


State 50

   79 BOOLEAN_VAL: FALSE .

    $default  reduce using rule 79 (BOOLEAN_VAL)


State 51

   65 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION
   89 RETURN_STATEMENT: RETURN EXPRESSION .

    EQ  shift, and go to state 106

    $default  reduce using rule 89 (RETURN_STATEMENT)


State 52

   59 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION . RELATIONAL_OPERATOR ARITHMETIC_EXPRESSION

    LT  shift, and go to state 107
    LE  shift, and go to state 108
    GT  shift, and go to state 109
    GE  shift, and go to state 110

    RELATIONAL_OPERATOR  go to state 111


State 53

   29 ARITHMETIC_EXPRESSION: ARITHMETIC_FACTOR .
   35 ARITHMETIC_COMPOSITION: ARITHMETIC_FACTOR . MULTIPLICATIVE_OPERATOR ARITHMETIC_FACTOR

    MUL  shift, and go to state 112
    DIV  shift, and go to state 113

    $default  reduce using rule 29 (ARITHMETIC_EXPRESSION)

    MULTIPLICATIVE_OPERATOR  go to state 114


State 54

   26 EXPRESSION: ARITHMETIC_COMPOSITION .
   28 ARITHMETIC_EXPRESSION: ARITHMETIC_COMPOSITION .
   36 ARITHMETIC_COMPOSITION: ARITHMETIC_COMPOSITION . MULTIPLICATIVE_OPERATOR ARITHMETIC_FACTOR
   37                       | ARITHMETIC_COMPOSITION . MULTIPLICATIVE_OPERATOR ARITHMETIC_TERM

    MUL  shift, and go to state 112
    DIV  shift, and go to state 113

    RP        reduce using rule 26 (EXPRESSION)
    RP        [reduce using rule 28 (ARITHMETIC_EXPRESSION)]
    LT        reduce using rule 28 (ARITHMETIC_EXPRESSION)
    LE        reduce using rule 28 (ARITHMETIC_EXPRESSION)
    GT        reduce using rule 28 (ARITHMETIC_EXPRESSION)
    GE        reduce using rule 28 (ARITHMETIC_EXPRESSION)
    $default  reduce using rule 26 (EXPRESSION)

    MULTIPLICATIVE_OPERATOR  go to state 115


State 55

   58 LOGICAL_COMP_DUO: LOGICAL_FACTOR . OR LOGICAL_FACTOR

    OR  shift, and go to state 116


State 56

   25 EXPRESSION: LOGICAL_COMPOSITION .
   53 LOGICAL_COMPOSITION: LOGICAL_COMPOSITION . OR LOGICAL_FACTOR
   54                    | LOGICAL_COMPOSITION . OR LOGICAL_TERM

    OR  shift, and go to state 117

    OR        [reduce using rule 25 (EXPRESSION)]
    $default  reduce using rule 25 (EXPRESSION)


State 57

   52 LOGICAL_COMPOSITION: LOGICAL_COMP_DUO .

    $default  reduce using rule 52 (LOGICAL_COMPOSITION)


State 58

   48 LOGICAL_FACTOR: RELATIONAL_EXPRESSION .

    $default  reduce using rule 48 (LOGICAL_FACTOR)


State 59

   60 RELATIONAL_EXPRESSION: EQUIVALANCE_EXPRESSION .

    $default  reduce using rule 60 (RELATIONAL_EXPRESSION)


State 60

   27 EXPRESSION: VALUE .

    $default  reduce using rule 27 (EXPRESSION)


State 61

   73 VALUE: CONSTANT .

    $default  reduce using rule 73 (VALUE)


State 62

   47 LOGICAL_FACTOR: BOOLEAN_VAL .
   74 CONSTANT: BOOLEAN_VAL .

    AND        reduce using rule 47 (LOGICAL_FACTOR)
    AND        [reduce using rule 74 (CONSTANT)]
    OR         reduce using rule 47 (LOGICAL_FACTOR)
    OR         [reduce using rule 74 (CONSTANT)]
    RP         reduce using rule 47 (LOGICAL_FACTOR)
    RP         [reduce using rule 74 (CONSTANT)]
    SEMICOLON  reduce using rule 47 (LOGICAL_FACTOR)
    SEMICOLON  [reduce using rule 74 (CONSTANT)]
    EQ         reduce using rule 47 (LOGICAL_FACTOR)
    EQ         [reduce using rule 74 (CONSTANT)]
    $default   reduce using rule 47 (LOGICAL_FACTOR)


State 63

   34 ARITHMETIC_FACTOR: FUNCTION_CALL .
   51 LOGICAL_FACTOR: FUNCTION_CALL .
   90 RETURN_STATEMENT: RETURN FUNCTION_CALL .

    OR         reduce using rule 51 (LOGICAL_FACTOR)
    SEMICOLON  reduce using rule 90 (RETURN_STATEMENT)
    $default   reduce using rule 34 (ARITHMETIC_FACTOR)


State 64

   91 PRIMITIVE_FUNCTION_CALL: GET_HEADINGS LP . RP

    RP  shift, and go to state 118


State 65

   92 PRIMITIVE_FUNCTION_CALL: GET_ALTITUDE LP . RP

    RP  shift, and go to state 119


State 66

   93 PRIMITIVE_FUNCTION_CALL: GET_TEMPERATURE LP . RP

    RP  shift, and go to state 120


State 67

   94 PRIMITIVE_FUNCTION_CALL: SET_VERTICALCLIMB LP . ARITHMETIC_EXPRESSION RP

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_EXPRESSION    go to state 125
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 126
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 68

   95 PRIMITIVE_FUNCTION_CALL: SET_HORIZONTAL LP . ARITHMETIC_EXPRESSION RP

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_EXPRESSION    go to state 128
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 126
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 69

   96 PRIMITIVE_FUNCTION_CALL: SET_HEADING LP . LOGICAL_EXPRESSION RP

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_EXPRESSION       go to state 129
    LOGICAL_FACTOR           go to state 97
    LOGICAL_COMPOSITION      go to state 98
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 70

   97 PRIMITIVE_FUNCTION_CALL: SET_SPRAY LP . LOGICAL_EXPRESSION RP

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_EXPRESSION       go to state 130
    LOGICAL_FACTOR           go to state 97
    LOGICAL_COMPOSITION      go to state 98
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 71

   98 PRIMITIVE_FUNCTION_CALL: CONNECT LP . STRING COMMA STRING RP

    STRING  shift, and go to state 131


State 72

   99 PRIMITIVE_FUNCTION_CALL: SLEEP LP . ARITHMETIC_EXPRESSION RP

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_EXPRESSION    go to state 132
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 126
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 73

  100 PRIMITIVE_FUNCTION_CALL: SCAN_NEXT LP . RP

    RP  shift, and go to state 133


State 74

  101 PRIMITIVE_FUNCTION_CALL: PRINT_OUT LP . EXPRESSION RP

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 134
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 55
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 75

    0 $accept: PROGRAM $end .

    $default  accept


State 76

   82 FUNCTION_DEFINITION: FUNCTION . TYPE VAR_NAME LP ARGUMENTS RP LB STATEMENTS RB
   83                    | FUNCTION . TYPE VAR_NAME LP RP LB STATEMENTS RB

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    BOOL   shift, and go to state 9
    STR    shift, and go to state 10

    TYPE            go to state 135
    PRIMITIVE_TYPE  go to state 33


State 77

    3 STATEMENTS: STATEMENTS STATEMENT .

    $default  reduce using rule 3 (STATEMENTS)


State 78

    4 STATEMENTS: STATEMENTS FUNCTION_DEFINITION .

    $default  reduce using rule 4 (STATEMENTS)


State 79

   13 NON_IF_STATEMENT: DECLARATIVE_STATEMENT SEMICOLON .

    $default  reduce using rule 13 (NON_IF_STATEMENT)


State 80

   22 ASSIGNMENT_STATEMENT: DECLARATIVE_STATEMENT ASSIGN_OP . EXPRESSION
   23                     | DECLARATIVE_STATEMENT ASSIGN_OP . FUNCTION_CALL

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 136
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 55
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 137
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 81

   14 NON_IF_STATEMENT: ASSIGNMENT_STATEMENT SEMICOLON .

    $default  reduce using rule 14 (NON_IF_STATEMENT)


State 82

   17 DECLARATIVE_STATEMENT: TYPE VAR_NAME .

    $default  reduce using rule 17 (DECLARATIVE_STATEMENT)


State 83

   15 NON_IF_STATEMENT: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 15 (NON_IF_STATEMENT)


State 84

   16 NON_IF_STATEMENT: RETURN_STATEMENT SEMICOLON .

    $default  reduce using rule 16 (NON_IF_STATEMENT)


State 85

   12 NON_IF_STATEMENT: LB STATEMENTS RB .

    $default  reduce using rule 12 (NON_IF_STATEMENT)


State 86

   86 FUNCTION_CALL: VAR_NAME LP RP .

    $default  reduce using rule 86 (FUNCTION_CALL)


State 87

   76 CONSTANT: INTEGER .

    $default  reduce using rule 76 (CONSTANT)


State 88

   72 VALUE: VAR_NAME .

    $default  reduce using rule 72 (VALUE)


State 89

   75 CONSTANT: FLOAT_NUMBER .

    $default  reduce using rule 75 (CONSTANT)


State 90

   84 PARAMETERS: VALUE .

    $default  reduce using rule 84 (PARAMETERS)


State 91

   74 CONSTANT: BOOLEAN_VAL .

    $default  reduce using rule 74 (CONSTANT)


State 92

   85 PARAMETERS: PARAMETERS . COMMA VALUE
   87 FUNCTION_CALL: VAR_NAME LP PARAMETERS . RP

    RP     shift, and go to state 138
    COMMA  shift, and go to state 139


State 93

   20 ASSIGNMENT_STATEMENT: VAR_NAME ASSIGN_OP EXPRESSION .
   65 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION

    EQ  shift, and go to state 106

    $default  reduce using rule 20 (ASSIGNMENT_STATEMENT)


State 94

   21 ASSIGNMENT_STATEMENT: VAR_NAME ASSIGN_OP FUNCTION_CALL .
   34 ARITHMETIC_FACTOR: FUNCTION_CALL .
   51 LOGICAL_FACTOR: FUNCTION_CALL .

    OR         reduce using rule 51 (LOGICAL_FACTOR)
    SEMICOLON  reduce using rule 21 (ASSIGNMENT_STATEMENT)
    $default   reduce using rule 34 (ARITHMETIC_FACTOR)


State 95

   65 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION

    EQ  shift, and go to state 106


State 96

    7 MATCHED: IF LP LOGICAL_EXPRESSION . RP MATCHED ELSE MATCHED
    9 UNMATCHED: IF LP LOGICAL_EXPRESSION . RP STATEMENT
   10          | IF LP LOGICAL_EXPRESSION . RP MATCHED ELSE UNMATCHED

    RP  shift, and go to state 140


State 97

   45 LOGICAL_EXPRESSION: LOGICAL_FACTOR .
   58 LOGICAL_COMP_DUO: LOGICAL_FACTOR . OR LOGICAL_FACTOR

    OR  shift, and go to state 116

    OR        [reduce using rule 45 (LOGICAL_EXPRESSION)]
    $default  reduce using rule 45 (LOGICAL_EXPRESSION)


State 98

   25 EXPRESSION: LOGICAL_COMPOSITION .
   44 LOGICAL_EXPRESSION: LOGICAL_COMPOSITION .
   53 LOGICAL_COMPOSITION: LOGICAL_COMPOSITION . OR LOGICAL_FACTOR
   54                    | LOGICAL_COMPOSITION . OR LOGICAL_TERM

    OR  shift, and go to state 117

    AND        reduce using rule 44 (LOGICAL_EXPRESSION)
    OR         [reduce using rule 44 (LOGICAL_EXPRESSION)]
    RP         reduce using rule 25 (EXPRESSION)
    RP         [reduce using rule 44 (LOGICAL_EXPRESSION)]
    SEMICOLON  reduce using rule 44 (LOGICAL_EXPRESSION)
    EQ         reduce using rule 25 (EXPRESSION)
    EQ         [reduce using rule 44 (LOGICAL_EXPRESSION)]
    $default   reduce using rule 25 (EXPRESSION)


State 99

   34 ARITHMETIC_FACTOR: FUNCTION_CALL .
   51 LOGICAL_FACTOR: FUNCTION_CALL .

    AND        reduce using rule 51 (LOGICAL_FACTOR)
    OR         reduce using rule 51 (LOGICAL_FACTOR)
    RP         reduce using rule 34 (ARITHMETIC_FACTOR)
    RP         [reduce using rule 51 (LOGICAL_FACTOR)]
    SEMICOLON  reduce using rule 51 (LOGICAL_FACTOR)
    EQ         reduce using rule 51 (LOGICAL_FACTOR)
    $default   reduce using rule 34 (ARITHMETIC_FACTOR)


State 100

   18 ITERATIVE_STATEMENT: WHILE LP LOGICAL_EXPRESSION . RP MATCHED

    RP  shift, and go to state 141


State 101

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT . SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

    SEMICOLON  shift, and go to state 142


State 102

   24 EXPRESSION: LP EXPRESSION . RP
   65 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION

    RP  shift, and go to state 143
    EQ  shift, and go to state 106


State 103

   33 ARITHMETIC_FACTOR: LP ARITHMETIC_EXPRESSION . RP
   59 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION . RELATIONAL_OPERATOR ARITHMETIC_EXPRESSION

    RP  shift, and go to state 144
    LT  shift, and go to state 107
    LE  shift, and go to state 108
    GT  shift, and go to state 109
    GE  shift, and go to state 110

    RELATIONAL_OPERATOR  go to state 111


State 104

   50 LOGICAL_FACTOR: LP LOGICAL_EXPRESSION . RP

    RP  shift, and go to state 145


State 105

   49 LOGICAL_FACTOR: NOT LOGICAL_EXPRESSION .

    $default  reduce using rule 49 (LOGICAL_FACTOR)


State 106

   65 EQUIVALANCE_EXPRESSION: EXPRESSION EQ . EXPRESSION

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 146
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 55
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 107

   61 RELATIONAL_OPERATOR: LT .

    $default  reduce using rule 61 (RELATIONAL_OPERATOR)


State 108

   64 RELATIONAL_OPERATOR: LE .

    $default  reduce using rule 64 (RELATIONAL_OPERATOR)


State 109

   62 RELATIONAL_OPERATOR: GT .

    $default  reduce using rule 62 (RELATIONAL_OPERATOR)


State 110

   63 RELATIONAL_OPERATOR: GE .

    $default  reduce using rule 63 (RELATIONAL_OPERATOR)


State 111

   59 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION RELATIONAL_OPERATOR . ARITHMETIC_EXPRESSION

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_EXPRESSION    go to state 147
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 126
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 112

   42 MULTIPLICATIVE_OPERATOR: MUL .

    $default  reduce using rule 42 (MULTIPLICATIVE_OPERATOR)


State 113

   43 MULTIPLICATIVE_OPERATOR: DIV .

    $default  reduce using rule 43 (MULTIPLICATIVE_OPERATOR)


State 114

   35 ARITHMETIC_COMPOSITION: ARITHMETIC_FACTOR MULTIPLICATIVE_OPERATOR . ARITHMETIC_FACTOR

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_FACTOR        go to state 148
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 115

   36 ARITHMETIC_COMPOSITION: ARITHMETIC_COMPOSITION MULTIPLICATIVE_OPERATOR . ARITHMETIC_FACTOR
   37                       | ARITHMETIC_COMPOSITION MULTIPLICATIVE_OPERATOR . ARITHMETIC_TERM

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_FACTOR        go to state 149
    ARITHMETIC_TERM          go to state 150
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 116

   58 LOGICAL_COMP_DUO: LOGICAL_FACTOR OR . LOGICAL_FACTOR

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 151
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 117

   53 LOGICAL_COMPOSITION: LOGICAL_COMPOSITION OR . LOGICAL_FACTOR
   54                    | LOGICAL_COMPOSITION OR . LOGICAL_TERM

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 152
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_TERM             go to state 153
    LOGICAL_TERM_DUO         go to state 154
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 118

   91 PRIMITIVE_FUNCTION_CALL: GET_HEADINGS LP RP .

    $default  reduce using rule 91 (PRIMITIVE_FUNCTION_CALL)


State 119

   92 PRIMITIVE_FUNCTION_CALL: GET_ALTITUDE LP RP .

    $default  reduce using rule 92 (PRIMITIVE_FUNCTION_CALL)


State 120

   93 PRIMITIVE_FUNCTION_CALL: GET_TEMPERATURE LP RP .

    $default  reduce using rule 93 (PRIMITIVE_FUNCTION_CALL)


State 121

   33 ARITHMETIC_FACTOR: LP . ARITHMETIC_EXPRESSION RP

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_EXPRESSION    go to state 155
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 126
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 122

   31 ARITHMETIC_FACTOR: INTEGER .

    $default  reduce using rule 31 (ARITHMETIC_FACTOR)


State 123

   30 ARITHMETIC_FACTOR: VAR_NAME .
   86 FUNCTION_CALL: VAR_NAME . LP RP
   87              | VAR_NAME . LP PARAMETERS RP

    LP  shift, and go to state 38

    $default  reduce using rule 30 (ARITHMETIC_FACTOR)


State 124

   32 ARITHMETIC_FACTOR: FLOAT_NUMBER .

    $default  reduce using rule 32 (ARITHMETIC_FACTOR)


State 125

   94 PRIMITIVE_FUNCTION_CALL: SET_VERTICALCLIMB LP ARITHMETIC_EXPRESSION . RP

    RP  shift, and go to state 156


State 126

   28 ARITHMETIC_EXPRESSION: ARITHMETIC_COMPOSITION .
   36 ARITHMETIC_COMPOSITION: ARITHMETIC_COMPOSITION . MULTIPLICATIVE_OPERATOR ARITHMETIC_FACTOR
   37                       | ARITHMETIC_COMPOSITION . MULTIPLICATIVE_OPERATOR ARITHMETIC_TERM

    MUL  shift, and go to state 112
    DIV  shift, and go to state 113

    $default  reduce using rule 28 (ARITHMETIC_EXPRESSION)

    MULTIPLICATIVE_OPERATOR  go to state 115


State 127

   34 ARITHMETIC_FACTOR: FUNCTION_CALL .

    $default  reduce using rule 34 (ARITHMETIC_FACTOR)


State 128

   95 PRIMITIVE_FUNCTION_CALL: SET_HORIZONTAL LP ARITHMETIC_EXPRESSION . RP

    RP  shift, and go to state 157


State 129

   96 PRIMITIVE_FUNCTION_CALL: SET_HEADING LP LOGICAL_EXPRESSION . RP

    RP  shift, and go to state 158


State 130

   97 PRIMITIVE_FUNCTION_CALL: SET_SPRAY LP LOGICAL_EXPRESSION . RP

    RP  shift, and go to state 159


State 131

   98 PRIMITIVE_FUNCTION_CALL: CONNECT LP STRING . COMMA STRING RP

    COMMA  shift, and go to state 160


State 132

   99 PRIMITIVE_FUNCTION_CALL: SLEEP LP ARITHMETIC_EXPRESSION . RP

    RP  shift, and go to state 161


State 133

  100 PRIMITIVE_FUNCTION_CALL: SCAN_NEXT LP RP .

    $default  reduce using rule 100 (PRIMITIVE_FUNCTION_CALL)


State 134

   65 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION
  101 PRIMITIVE_FUNCTION_CALL: PRINT_OUT LP EXPRESSION . RP

    RP  shift, and go to state 162
    EQ  shift, and go to state 106


State 135

   82 FUNCTION_DEFINITION: FUNCTION TYPE . VAR_NAME LP ARGUMENTS RP LB STATEMENTS RB
   83                    | FUNCTION TYPE . VAR_NAME LP RP LB STATEMENTS RB

    VAR_NAME  shift, and go to state 163


State 136

   22 ASSIGNMENT_STATEMENT: DECLARATIVE_STATEMENT ASSIGN_OP EXPRESSION .
   65 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION

    EQ  shift, and go to state 106

    $default  reduce using rule 22 (ASSIGNMENT_STATEMENT)


State 137

   23 ASSIGNMENT_STATEMENT: DECLARATIVE_STATEMENT ASSIGN_OP FUNCTION_CALL .
   34 ARITHMETIC_FACTOR: FUNCTION_CALL .
   51 LOGICAL_FACTOR: FUNCTION_CALL .

    OR         reduce using rule 51 (LOGICAL_FACTOR)
    SEMICOLON  reduce using rule 23 (ASSIGNMENT_STATEMENT)
    $default   reduce using rule 34 (ARITHMETIC_FACTOR)


State 138

   87 FUNCTION_CALL: VAR_NAME LP PARAMETERS RP .

    $default  reduce using rule 87 (FUNCTION_CALL)


State 139

   85 PARAMETERS: PARAMETERS COMMA . VALUE

    INTEGER       shift, and go to state 87
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 89
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    VALUE        go to state 164
    CONSTANT     go to state 61
    BOOLEAN_VAL  go to state 91


State 140

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP . MATCHED ELSE MATCHED
    9 UNMATCHED: IF LP LOGICAL_EXPRESSION RP . STATEMENT
   10          | IF LP LOGICAL_EXPRESSION RP . MATCHED ELSE UNMATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENT                go to state 165
    MATCHED                  go to state 166
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 141

   18 ITERATIVE_STATEMENT: WHILE LP LOGICAL_EXPRESSION RP . MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 167
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 168
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 142

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON . LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_EXPRESSION       go to state 169
    LOGICAL_FACTOR           go to state 97
    LOGICAL_COMPOSITION      go to state 98
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 143

   24 EXPRESSION: LP EXPRESSION RP .

    $default  reduce using rule 24 (EXPRESSION)


State 144

   33 ARITHMETIC_FACTOR: LP ARITHMETIC_EXPRESSION RP .

    $default  reduce using rule 33 (ARITHMETIC_FACTOR)


State 145

   50 LOGICAL_FACTOR: LP LOGICAL_EXPRESSION RP .

    $default  reduce using rule 50 (LOGICAL_FACTOR)


State 146

   65 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION
   65                       | EXPRESSION EQ EXPRESSION .

    EQ  shift, and go to state 106

    EQ        [reduce using rule 65 (EQUIVALANCE_EXPRESSION)]
    $default  reduce using rule 65 (EQUIVALANCE_EXPRESSION)


State 147

   59 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION RELATIONAL_OPERATOR ARITHMETIC_EXPRESSION .

    $default  reduce using rule 59 (RELATIONAL_EXPRESSION)


State 148

   35 ARITHMETIC_COMPOSITION: ARITHMETIC_FACTOR MULTIPLICATIVE_OPERATOR ARITHMETIC_FACTOR .

    $default  reduce using rule 35 (ARITHMETIC_COMPOSITION)


State 149

   36 ARITHMETIC_COMPOSITION: ARITHMETIC_COMPOSITION MULTIPLICATIVE_OPERATOR ARITHMETIC_FACTOR .
   39 ARITHMETIC_TERM: ARITHMETIC_FACTOR . ADDITIVE_OPERATOR ARITHMETIC_FACTOR

    ADD  shift, and go to state 170
    SUB  shift, and go to state 171

    $default  reduce using rule 36 (ARITHMETIC_COMPOSITION)

    ADDITIVE_OPERATOR  go to state 172


State 150

   37 ARITHMETIC_COMPOSITION: ARITHMETIC_COMPOSITION MULTIPLICATIVE_OPERATOR ARITHMETIC_TERM .
   38 ARITHMETIC_TERM: ARITHMETIC_TERM . ADDITIVE_OPERATOR ARITHMETIC_FACTOR

    ADD  shift, and go to state 170
    SUB  shift, and go to state 171

    $default  reduce using rule 37 (ARITHMETIC_COMPOSITION)

    ADDITIVE_OPERATOR  go to state 173


State 151

   58 LOGICAL_COMP_DUO: LOGICAL_FACTOR . OR LOGICAL_FACTOR
   58                 | LOGICAL_FACTOR OR LOGICAL_FACTOR .

    OR  shift, and go to state 116

    OR        [reduce using rule 58 (LOGICAL_COMP_DUO)]
    $default  reduce using rule 58 (LOGICAL_COMP_DUO)


State 152

   53 LOGICAL_COMPOSITION: LOGICAL_COMPOSITION OR LOGICAL_FACTOR .
   57 LOGICAL_TERM_DUO: LOGICAL_FACTOR . AND LOGICAL_FACTOR
   58 LOGICAL_COMP_DUO: LOGICAL_FACTOR . OR LOGICAL_FACTOR

    AND  shift, and go to state 174
    OR   shift, and go to state 116

    AND       [reduce using rule 53 (LOGICAL_COMPOSITION)]
    OR        [reduce using rule 53 (LOGICAL_COMPOSITION)]
    $default  reduce using rule 53 (LOGICAL_COMPOSITION)


State 153

   54 LOGICAL_COMPOSITION: LOGICAL_COMPOSITION OR LOGICAL_TERM .
   56 LOGICAL_TERM: LOGICAL_TERM . AND LOGICAL_FACTOR

    AND  shift, and go to state 175

    AND       [reduce using rule 54 (LOGICAL_COMPOSITION)]
    $default  reduce using rule 54 (LOGICAL_COMPOSITION)


State 154

   55 LOGICAL_TERM: LOGICAL_TERM_DUO .

    $default  reduce using rule 55 (LOGICAL_TERM)


State 155

   33 ARITHMETIC_FACTOR: LP ARITHMETIC_EXPRESSION . RP

    RP  shift, and go to state 144


State 156

   94 PRIMITIVE_FUNCTION_CALL: SET_VERTICALCLIMB LP ARITHMETIC_EXPRESSION RP .

    $default  reduce using rule 94 (PRIMITIVE_FUNCTION_CALL)


State 157

   95 PRIMITIVE_FUNCTION_CALL: SET_HORIZONTAL LP ARITHMETIC_EXPRESSION RP .

    $default  reduce using rule 95 (PRIMITIVE_FUNCTION_CALL)


State 158

   96 PRIMITIVE_FUNCTION_CALL: SET_HEADING LP LOGICAL_EXPRESSION RP .

    $default  reduce using rule 96 (PRIMITIVE_FUNCTION_CALL)


State 159

   97 PRIMITIVE_FUNCTION_CALL: SET_SPRAY LP LOGICAL_EXPRESSION RP .

    $default  reduce using rule 97 (PRIMITIVE_FUNCTION_CALL)


State 160

   98 PRIMITIVE_FUNCTION_CALL: CONNECT LP STRING COMMA . STRING RP

    STRING  shift, and go to state 176


State 161

   99 PRIMITIVE_FUNCTION_CALL: SLEEP LP ARITHMETIC_EXPRESSION RP .

    $default  reduce using rule 99 (PRIMITIVE_FUNCTION_CALL)


State 162

  101 PRIMITIVE_FUNCTION_CALL: PRINT_OUT LP EXPRESSION RP .

    $default  reduce using rule 101 (PRIMITIVE_FUNCTION_CALL)


State 163

   82 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME . LP ARGUMENTS RP LB STATEMENTS RB
   83                    | FUNCTION TYPE VAR_NAME . LP RP LB STATEMENTS RB

    LP  shift, and go to state 177


State 164

   85 PARAMETERS: PARAMETERS COMMA VALUE .

    $default  reduce using rule 85 (PARAMETERS)


State 165

    9 UNMATCHED: IF LP LOGICAL_EXPRESSION RP STATEMENT .

    $default  reduce using rule 9 (UNMATCHED)


State 166

    5 STATEMENT: MATCHED .
    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED . ELSE MATCHED
   10 UNMATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED . ELSE UNMATCHED

    ELSE  shift, and go to state 178

    $default  reduce using rule 5 (STATEMENT)


State 167

    7 MATCHED: IF . LP LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED

    LP  shift, and go to state 179


State 168

   18 ITERATIVE_STATEMENT: WHILE LP LOGICAL_EXPRESSION RP MATCHED .

    $default  reduce using rule 18 (ITERATIVE_STATEMENT)


State 169

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION . SEMICOLON NON_IF_STATEMENT RP MATCHED

    SEMICOLON  shift, and go to state 180


State 170

   40 ADDITIVE_OPERATOR: ADD .

    $default  reduce using rule 40 (ADDITIVE_OPERATOR)


State 171

   41 ADDITIVE_OPERATOR: SUB .

    $default  reduce using rule 41 (ADDITIVE_OPERATOR)


State 172

   39 ARITHMETIC_TERM: ARITHMETIC_FACTOR ADDITIVE_OPERATOR . ARITHMETIC_FACTOR

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_FACTOR        go to state 181
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 173

   38 ARITHMETIC_TERM: ARITHMETIC_TERM ADDITIVE_OPERATOR . ARITHMETIC_FACTOR

    LP                 shift, and go to state 121
    INTEGER            shift, and go to state 122
    VAR_NAME           shift, and go to state 123
    FLOAT_NUMBER       shift, and go to state 124
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    ARITHMETIC_FACTOR        go to state 182
    FUNCTION_CALL            go to state 127
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 174

   57 LOGICAL_TERM_DUO: LOGICAL_FACTOR AND . LOGICAL_FACTOR

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 183
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 175

   56 LOGICAL_TERM: LOGICAL_TERM AND . LOGICAL_FACTOR

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_FACTOR           go to state 184
    LOGICAL_COMPOSITION      go to state 56
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 176

   98 PRIMITIVE_FUNCTION_CALL: CONNECT LP STRING COMMA STRING . RP

    RP  shift, and go to state 185


State 177

   82 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP . ARGUMENTS RP LB STATEMENTS RB
   83                    | FUNCTION TYPE VAR_NAME LP . RP LB STATEMENTS RB

    RP     shift, and go to state 186
    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    BOOL   shift, and go to state 9
    STR    shift, and go to state 10

    TYPE            go to state 187
    PRIMITIVE_TYPE  go to state 33
    ARGUMENTS       go to state 188


State 178

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE . MATCHED
   10 UNMATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE . UNMATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 189
    UNMATCHED                go to state 190
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 179

    7 MATCHED: IF LP . LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 95
    ARITHMETIC_EXPRESSION    go to state 52
    ARITHMETIC_FACTOR        go to state 53
    ARITHMETIC_COMPOSITION   go to state 54
    LOGICAL_EXPRESSION       go to state 191
    LOGICAL_FACTOR           go to state 97
    LOGICAL_COMPOSITION      go to state 98
    LOGICAL_COMP_DUO         go to state 57
    RELATIONAL_EXPRESSION    go to state 58
    EQUIVALANCE_EXPRESSION   go to state 59
    VALUE                    go to state 60
    CONSTANT                 go to state 61
    BOOLEAN_VAL              go to state 62
    FUNCTION_CALL            go to state 99
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 180

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON . NON_IF_STATEMENT RP MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    NON_IF_STATEMENT         go to state 192
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 181

   39 ARITHMETIC_TERM: ARITHMETIC_FACTOR ADDITIVE_OPERATOR ARITHMETIC_FACTOR .

    $default  reduce using rule 39 (ARITHMETIC_TERM)


State 182

   38 ARITHMETIC_TERM: ARITHMETIC_TERM ADDITIVE_OPERATOR ARITHMETIC_FACTOR .

    $default  reduce using rule 38 (ARITHMETIC_TERM)


State 183

   57 LOGICAL_TERM_DUO: LOGICAL_FACTOR AND LOGICAL_FACTOR .
   58 LOGICAL_COMP_DUO: LOGICAL_FACTOR . OR LOGICAL_FACTOR

    OR  shift, and go to state 116

    OR        [reduce using rule 57 (LOGICAL_TERM_DUO)]
    $default  reduce using rule 57 (LOGICAL_TERM_DUO)


State 184

   56 LOGICAL_TERM: LOGICAL_TERM AND LOGICAL_FACTOR .
   58 LOGICAL_COMP_DUO: LOGICAL_FACTOR . OR LOGICAL_FACTOR

    OR  shift, and go to state 116

    OR        [reduce using rule 56 (LOGICAL_TERM)]
    $default  reduce using rule 56 (LOGICAL_TERM)


State 185

   98 PRIMITIVE_FUNCTION_CALL: CONNECT LP STRING COMMA STRING RP .

    $default  reduce using rule 98 (PRIMITIVE_FUNCTION_CALL)


State 186

   83 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP RP . LB STATEMENTS RB

    LB  shift, and go to state 193


State 187

   80 ARGUMENTS: TYPE . VAR_NAME

    VAR_NAME  shift, and go to state 194


State 188

   81 ARGUMENTS: ARGUMENTS . COMMA TYPE VAR_NAME
   82 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS . RP LB STATEMENTS RB

    RP     shift, and go to state 195
    COMMA  shift, and go to state 196


State 189

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED .

    $default  reduce using rule 7 (MATCHED)


State 190

   10 UNMATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE UNMATCHED .

    $default  reduce using rule 10 (UNMATCHED)


State 191

    7 MATCHED: IF LP LOGICAL_EXPRESSION . RP MATCHED ELSE MATCHED

    RP  shift, and go to state 197


State 192

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT . RP MATCHED

    RP  shift, and go to state 198


State 193

   83 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP RP LB . STATEMENTS RB

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENTS               go to state 199
    STATEMENT                go to state 25
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 194

   80 ARGUMENTS: TYPE VAR_NAME .

    $default  reduce using rule 80 (ARGUMENTS)


State 195

   82 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP . LB STATEMENTS RB

    LB  shift, and go to state 200


State 196

   81 ARGUMENTS: ARGUMENTS COMMA . TYPE VAR_NAME

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    BOOL   shift, and go to state 9
    STR    shift, and go to state 10

    TYPE            go to state 201
    PRIMITIVE_TYPE  go to state 33


State 197

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP . MATCHED ELSE MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 167
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 202
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 198

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP . MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 167
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 203
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 199

    3 STATEMENTS: STATEMENTS . STATEMENT
    4           | STATEMENTS . FUNCTION_DEFINITION
   83 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP RP LB STATEMENTS . RB

    LB                 shift, and go to state 1
    RB                 shift, and go to state 204
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    FUNCTION           shift, and go to state 76
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENT                go to state 77
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_DEFINITION      go to state 78
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 200

   82 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP LB . STATEMENTS RB

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENTS               go to state 205
    STATEMENT                go to state 25
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 201

   81 ARGUMENTS: ARGUMENTS COMMA TYPE . VAR_NAME

    VAR_NAME  shift, and go to state 206


State 202

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED . ELSE MATCHED

    ELSE  shift, and go to state 207


State 203

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED .

    $default  reduce using rule 19 (ITERATIVE_STATEMENT)


State 204

   83 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP RP LB STATEMENTS RB .

    $default  reduce using rule 83 (FUNCTION_DEFINITION)


State 205

    3 STATEMENTS: STATEMENTS . STATEMENT
    4           | STATEMENTS . FUNCTION_DEFINITION
   82 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP LB STATEMENTS . RB

    LB                 shift, and go to state 1
    RB                 shift, and go to state 208
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    FUNCTION           shift, and go to state 76
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENT                go to state 77
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_DEFINITION      go to state 78
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 206

   81 ARGUMENTS: ARGUMENTS COMMA TYPE VAR_NAME .

    $default  reduce using rule 81 (ARGUMENTS)


State 207

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE . MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 167
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 189
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 208

   82 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP LB STATEMENTS RB .

    $default  reduce using rule 82 (FUNCTION_DEFINITION)
