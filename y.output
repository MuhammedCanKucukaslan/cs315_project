Terminals unused in grammar

    LCOM
    RCOM
    DOT
    SIGN
    SPACE
    ANYCHAR
    DIGIT
    ALPHABETICAL
    ASCII
    STRING_WORD


Rules useless in parser due to conflicts

   45 BOOLEAN_FACTOR: VALUE


State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce
State 61 conflicts: 5 reduce/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 3 reduce/reduce
State 139 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce, 2 reduce/reduce
State 144 conflicts: 3 reduce/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: STATEMENTS

    2 STATEMENTS: STATEMENT
    3           | STATEMENTS STATEMENT
    4           | STATEMENTS FUNCTION_DEFINITION

    5 STATEMENT: MATCHED
    6          | UNMATCHED

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED
    8        | NON_IF_STATEMENT

    9 UNMATCHED: IF LP LOGICAL_EXPRESSION RP STATEMENT
   10          | IF LP LOGICAL_EXPRESSION RP MATCHED ELSE UNMATCHED

   11 NON_IF_STATEMENT: ITERATIVE_STATEMENT
   12                 | LB STATEMENTS RB
   13                 | DECLARATIVE_STATEMENT SEMICOLON
   14                 | ASSIGNMENT_STATEMENT SEMICOLON
   15                 | FUNCTION_CALL SEMICOLON
   16                 | RETURN_STATEMENT SEMICOLON

   17 DECLARATIVE_STATEMENT: TYPE VAR_NAME

   18 ITERATIVE_STATEMENT: WHILE LP LOGICAL_EXPRESSION RP MATCHED
   19                    | FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

   20 ASSIGNMENT_STATEMENT: VAR_NAME ASSIGN_OP EXPRESSION
   21                     | VAR_NAME ASSIGN_OP FUNCTION_CALL
   22                     | DECLARATIVE_STATEMENT ASSIGN_OP EXPRESSION
   23                     | DECLARATIVE_STATEMENT ASSIGN_OP FUNCTION_CALL

   24 EXPRESSION: LP EXPRESSION RP
   25           | LOGICAL_EXPRESSION
   26           | ARITHMETIC_EXPRESSION

   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION ADDITIVE_OPERATOR TERM
   28                      | TERM

   29 TERM: TERM MULTIPLICATIVE_OPERATOR FACTOR
   30     | FACTOR

   31 FACTOR: LP ARITHMETIC_EXPRESSION RP
   32       | VALUE

   33 ADDITIVE_OPERATOR: ADD
   34                  | SUB

   35 MULTIPLICATIVE_OPERATOR: MUL
   36                        | DIV

   37 LOGICAL_EXPRESSION: OR_EXPRESSION

   38 OR_EXPRESSION: OR_EXPRESSION OR AND_EXPRESSION
   39              | AND_EXPRESSION

   40 AND_EXPRESSION: AND_EXPRESSION AND BOOLEAN_FACTOR
   41               | BOOLEAN_FACTOR

   42 BOOLEAN_FACTOR: NOT BOOLEAN_FACTOR
   43               | LP OR_EXPRESSION RP
   44               | RELATIONAL_EXPRESSION
   45               | VALUE

   46 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION RELATIONAL_OPERATOR ARITHMETIC_EXPRESSION
   47                      | EQUIVALANCE_EXPRESSION

   48 RELATIONAL_OPERATOR: LT
   49                    | GT
   50                    | GE
   51                    | LE

   52 EQUIVALANCE_EXPRESSION: EXPRESSION EQ EXPRESSION

   53 TYPE: PRIMITIVE_TYPE
   54     | VOID

   55 PRIMITIVE_TYPE: INT
   56               | FLOAT
   57               | BOOL
   58               | STR

   59 VALUE: VAR_NAME
   60      | CONSTANT

   61 CONSTANT: BOOLEAN_VAL
   62         | FLOAT_NUMBER
   63         | INTEGER
   64         | STRING

   65 BOOLEAN_VAL: TRUE
   66            | FALSE

   67 ARGUMENTS: TYPE VAR_NAME
   68          | ARGUMENTS COMMA TYPE VAR_NAME

   69 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP LB STATEMENTS RB
   70                    | FUNCTION TYPE VAR_NAME LP RP LB STATEMENTS RB

   71 PARAMETERS: VALUE
   72           | PARAMETERS COMMA VALUE

   73 FUNCTION_CALL: VAR_NAME LP RP
   74              | VAR_NAME LP PARAMETERS RP
   75              | PRIMITIVE_FUNCTION_CALL

   76 RETURN_STATEMENT: RETURN EXPRESSION
   77                 | RETURN FUNCTION_CALL

   78 PRIMITIVE_FUNCTION_CALL: GET_HEADINGS LP RP
   79                        | GET_ALTITUDE LP RP
   80                        | GET_TEMPERATURE LP RP
   81                        | SET_VERTICALCLIMB LP ARITHMETIC_EXPRESSION RP
   82                        | SET_HORIZONTAL LP ARITHMETIC_EXPRESSION RP
   83                        | SET_HEADING LP LOGICAL_EXPRESSION RP
   84                        | SET_SPRAY LP LOGICAL_EXPRESSION RP
   85                        | CONNECT LP STRING COMMA STRING RP
   86                        | SLEEP LP ARITHMETIC_EXPRESSION RP
   87                        | SCAN_NEXT LP RP
   88                        | PRINT_OUT LP EXPRESSION RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AND (258) 40
    OR (259) 38
    LP (260) 7 9 10 18 19 24 31 43 69 70 73 74 78 79 80 81 82 83 84 85 86 87 88
    RP (261) 7 9 10 18 19 24 31 43 69 70 73 74 78 79 80 81 82 83 84 85 86 87 88
    LB (262) 12 69 70
    RB (263) 12 69 70
    LCOM (264)
    RCOM (265)
    DOT (266)
    SIGN (267)
    COMMA (268) 68 72 85
    SEMICOLON (269) 13 14 15 16 19
    ADD (270) 33
    SUB (271) 34
    MUL (272) 35
    DIV (273) 36
    SPACE (274)
    ANYCHAR (275)
    LT (276) 48
    LE (277) 51
    GT (278) 49
    GE (279) 50
    EQ (280) 52
    NOT (281) 42
    ASSIGN_OP (282) 20 21 22 23
    DIGIT (283)
    INTEGER (284) 63
    ALPHABETICAL (285)
    ASCII (286)
    STRING_WORD (287)
    STRING (288) 64 85
    VAR_NAME (289) 17 20 21 59 67 68 69 70 73 74
    FLOAT_NUMBER (290) 62
    IF (291) 7 9 10
    WHILE (292) 18
    FOR (293) 19
    ELSE (294) 7 10
    VOID (295) 54
    INT (296) 55
    FLOAT (297) 56
    BOOL (298) 57
    STR (299) 58
    TRUE (300) 65
    FALSE (301) 66
    FUNCTION (302) 69 70
    RETURN (303) 76 77
    GET_HEADINGS (304) 78
    GET_ALTITUDE (305) 79
    GET_TEMPERATURE (306) 80
    SET_VERTICALCLIMB (307) 81
    SET_HORIZONTAL (308) 82
    SET_HEADING (309) 83
    SET_SPRAY (310) 84
    CONNECT (311) 85
    SLEEP (312) 86
    SCAN_NEXT (313) 87
    PRINT_OUT (314) 88


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    PROGRAM (61)
        on left: 1
        on right: 0
    STATEMENTS (62)
        on left: 2 3 4
        on right: 1 3 4 12 69 70
    STATEMENT (63)
        on left: 5 6
        on right: 2 3 9
    MATCHED (64)
        on left: 7 8
        on right: 5 7 10 18 19
    UNMATCHED (65)
        on left: 9 10
        on right: 6 10
    NON_IF_STATEMENT (66)
        on left: 11 12 13 14 15 16
        on right: 8 19
    DECLARATIVE_STATEMENT (67)
        on left: 17
        on right: 13 22 23
    ITERATIVE_STATEMENT (68)
        on left: 18 19
        on right: 11
    ASSIGNMENT_STATEMENT (69)
        on left: 20 21 22 23
        on right: 14
    EXPRESSION (70)
        on left: 24 25 26
        on right: 20 22 24 52 76 88
    ARITHMETIC_EXPRESSION (71)
        on left: 27 28
        on right: 26 27 31 46 81 82 86
    TERM (72)
        on left: 29 30
        on right: 27 28 29
    FACTOR (73)
        on left: 31 32
        on right: 29 30
    ADDITIVE_OPERATOR (74)
        on left: 33 34
        on right: 27
    MULTIPLICATIVE_OPERATOR (75)
        on left: 35 36
        on right: 29
    LOGICAL_EXPRESSION (76)
        on left: 37
        on right: 7 9 10 18 19 25 83 84
    OR_EXPRESSION (77)
        on left: 38 39
        on right: 37 38 43
    AND_EXPRESSION (78)
        on left: 40 41
        on right: 38 39 40
    BOOLEAN_FACTOR (79)
        on left: 42 43 44 45
        on right: 40 41 42
    RELATIONAL_EXPRESSION (80)
        on left: 46 47
        on right: 44
    RELATIONAL_OPERATOR (81)
        on left: 48 49 50 51
        on right: 46
    EQUIVALANCE_EXPRESSION (82)
        on left: 52
        on right: 47
    TYPE (83)
        on left: 53 54
        on right: 17 67 68 69 70
    PRIMITIVE_TYPE (84)
        on left: 55 56 57 58
        on right: 53
    VALUE (85)
        on left: 59 60
        on right: 32 45 71 72
    CONSTANT (86)
        on left: 61 62 63 64
        on right: 60
    BOOLEAN_VAL (87)
        on left: 65 66
        on right: 61
    ARGUMENTS (88)
        on left: 67 68
        on right: 68 69
    FUNCTION_DEFINITION (89)
        on left: 69 70
        on right: 4
    PARAMETERS (90)
        on left: 71 72
        on right: 72 74
    FUNCTION_CALL (91)
        on left: 73 74 75
        on right: 15 21 23 77
    RETURN_STATEMENT (92)
        on left: 76 77
        on right: 16
    PRIMITIVE_FUNCTION_CALL (93)
        on left: 78 79 80 81 82 83 84 85 86 87 88
        on right: 75


State 0

    0 $accept: . PROGRAM $end

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    PROGRAM                  go to state 23
    STATEMENTS               go to state 24
    STATEMENT                go to state 25
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 1

   12 NON_IF_STATEMENT: LB . STATEMENTS RB

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENTS               go to state 37
    STATEMENT                go to state 25
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 2

   20 ASSIGNMENT_STATEMENT: VAR_NAME . ASSIGN_OP EXPRESSION
   21                     | VAR_NAME . ASSIGN_OP FUNCTION_CALL
   73 FUNCTION_CALL: VAR_NAME . LP RP
   74              | VAR_NAME . LP PARAMETERS RP

    LP         shift, and go to state 38
    ASSIGN_OP  shift, and go to state 39


State 3

    7 MATCHED: IF . LP LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED
    9 UNMATCHED: IF . LP LOGICAL_EXPRESSION RP STATEMENT
   10          | IF . LP LOGICAL_EXPRESSION RP MATCHED ELSE UNMATCHED

    LP  shift, and go to state 40


State 4

   18 ITERATIVE_STATEMENT: WHILE . LP LOGICAL_EXPRESSION RP MATCHED

    LP  shift, and go to state 41


State 5

   19 ITERATIVE_STATEMENT: FOR . LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

    LP  shift, and go to state 42


State 6

   54 TYPE: VOID .

    $default  reduce using rule 54 (TYPE)


State 7

   55 PRIMITIVE_TYPE: INT .

    $default  reduce using rule 55 (PRIMITIVE_TYPE)


State 8

   56 PRIMITIVE_TYPE: FLOAT .

    $default  reduce using rule 56 (PRIMITIVE_TYPE)


State 9

   57 PRIMITIVE_TYPE: BOOL .

    $default  reduce using rule 57 (PRIMITIVE_TYPE)


State 10

   58 PRIMITIVE_TYPE: STR .

    $default  reduce using rule 58 (PRIMITIVE_TYPE)


State 11

   76 RETURN_STATEMENT: RETURN . EXPRESSION
   77                 | RETURN . FUNCTION_CALL

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 51
    ARITHMETIC_EXPRESSION    go to state 52
    TERM                     go to state 53
    FACTOR                   go to state 54
    LOGICAL_EXPRESSION       go to state 55
    OR_EXPRESSION            go to state 56
    AND_EXPRESSION           go to state 57
    BOOLEAN_FACTOR           go to state 58
    RELATIONAL_EXPRESSION    go to state 59
    EQUIVALANCE_EXPRESSION   go to state 60
    VALUE                    go to state 61
    CONSTANT                 go to state 62
    BOOLEAN_VAL              go to state 63
    FUNCTION_CALL            go to state 64
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 12

   78 PRIMITIVE_FUNCTION_CALL: GET_HEADINGS . LP RP

    LP  shift, and go to state 65


State 13

   79 PRIMITIVE_FUNCTION_CALL: GET_ALTITUDE . LP RP

    LP  shift, and go to state 66


State 14

   80 PRIMITIVE_FUNCTION_CALL: GET_TEMPERATURE . LP RP

    LP  shift, and go to state 67


State 15

   81 PRIMITIVE_FUNCTION_CALL: SET_VERTICALCLIMB . LP ARITHMETIC_EXPRESSION RP

    LP  shift, and go to state 68


State 16

   82 PRIMITIVE_FUNCTION_CALL: SET_HORIZONTAL . LP ARITHMETIC_EXPRESSION RP

    LP  shift, and go to state 69


State 17

   83 PRIMITIVE_FUNCTION_CALL: SET_HEADING . LP LOGICAL_EXPRESSION RP

    LP  shift, and go to state 70


State 18

   84 PRIMITIVE_FUNCTION_CALL: SET_SPRAY . LP LOGICAL_EXPRESSION RP

    LP  shift, and go to state 71


State 19

   85 PRIMITIVE_FUNCTION_CALL: CONNECT . LP STRING COMMA STRING RP

    LP  shift, and go to state 72


State 20

   86 PRIMITIVE_FUNCTION_CALL: SLEEP . LP ARITHMETIC_EXPRESSION RP

    LP  shift, and go to state 73


State 21

   87 PRIMITIVE_FUNCTION_CALL: SCAN_NEXT . LP RP

    LP  shift, and go to state 74


State 22

   88 PRIMITIVE_FUNCTION_CALL: PRINT_OUT . LP EXPRESSION RP

    LP  shift, and go to state 75


State 23

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 76


State 24

    1 PROGRAM: STATEMENTS .
    3 STATEMENTS: STATEMENTS . STATEMENT
    4           | STATEMENTS . FUNCTION_DEFINITION

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    FUNCTION           shift, and go to state 77
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    $default  reduce using rule 1 (PROGRAM)

    STATEMENT                go to state 78
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_DEFINITION      go to state 79
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 25

    2 STATEMENTS: STATEMENT .

    $default  reduce using rule 2 (STATEMENTS)


State 26

    5 STATEMENT: MATCHED .

    $default  reduce using rule 5 (STATEMENT)


State 27

    6 STATEMENT: UNMATCHED .

    $default  reduce using rule 6 (STATEMENT)


State 28

    8 MATCHED: NON_IF_STATEMENT .

    $default  reduce using rule 8 (MATCHED)


State 29

   13 NON_IF_STATEMENT: DECLARATIVE_STATEMENT . SEMICOLON
   22 ASSIGNMENT_STATEMENT: DECLARATIVE_STATEMENT . ASSIGN_OP EXPRESSION
   23                     | DECLARATIVE_STATEMENT . ASSIGN_OP FUNCTION_CALL

    SEMICOLON  shift, and go to state 80
    ASSIGN_OP  shift, and go to state 81


State 30

   11 NON_IF_STATEMENT: ITERATIVE_STATEMENT .

    $default  reduce using rule 11 (NON_IF_STATEMENT)


State 31

   14 NON_IF_STATEMENT: ASSIGNMENT_STATEMENT . SEMICOLON

    SEMICOLON  shift, and go to state 82


State 32

   17 DECLARATIVE_STATEMENT: TYPE . VAR_NAME

    VAR_NAME  shift, and go to state 83


State 33

   53 TYPE: PRIMITIVE_TYPE .

    $default  reduce using rule 53 (TYPE)


State 34

   15 NON_IF_STATEMENT: FUNCTION_CALL . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 35

   16 NON_IF_STATEMENT: RETURN_STATEMENT . SEMICOLON

    SEMICOLON  shift, and go to state 85


State 36

   75 FUNCTION_CALL: PRIMITIVE_FUNCTION_CALL .

    $default  reduce using rule 75 (FUNCTION_CALL)


State 37

    3 STATEMENTS: STATEMENTS . STATEMENT
    4           | STATEMENTS . FUNCTION_DEFINITION
   12 NON_IF_STATEMENT: LB STATEMENTS . RB

    LB                 shift, and go to state 1
    RB                 shift, and go to state 86
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    FUNCTION           shift, and go to state 77
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENT                go to state 78
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_DEFINITION      go to state 79
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 38

   73 FUNCTION_CALL: VAR_NAME LP . RP
   74              | VAR_NAME LP . PARAMETERS RP

    RP            shift, and go to state 87
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    VALUE        go to state 89
    CONSTANT     go to state 62
    BOOLEAN_VAL  go to state 63
    PARAMETERS   go to state 90


State 39

   20 ASSIGNMENT_STATEMENT: VAR_NAME ASSIGN_OP . EXPRESSION
   21                     | VAR_NAME ASSIGN_OP . FUNCTION_CALL

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 91
    ARITHMETIC_EXPRESSION    go to state 52
    TERM                     go to state 53
    FACTOR                   go to state 54
    LOGICAL_EXPRESSION       go to state 55
    OR_EXPRESSION            go to state 56
    AND_EXPRESSION           go to state 57
    BOOLEAN_FACTOR           go to state 58
    RELATIONAL_EXPRESSION    go to state 59
    EQUIVALANCE_EXPRESSION   go to state 60
    VALUE                    go to state 61
    CONSTANT                 go to state 62
    BOOLEAN_VAL              go to state 63
    FUNCTION_CALL            go to state 92
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 40

    7 MATCHED: IF LP . LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED
    9 UNMATCHED: IF LP . LOGICAL_EXPRESSION RP STATEMENT
   10          | IF LP . LOGICAL_EXPRESSION RP MATCHED ELSE UNMATCHED

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 94
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 41

   18 ITERATIVE_STATEMENT: WHILE LP . LOGICAL_EXPRESSION RP MATCHED

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 95
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 42

   19 ITERATIVE_STATEMENT: FOR LP . NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    NON_IF_STATEMENT         go to state 96
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 43

   24 EXPRESSION: LP . EXPRESSION RP
   31 FACTOR: LP . ARITHMETIC_EXPRESSION RP
   43 BOOLEAN_FACTOR: LP . OR_EXPRESSION RP

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 97
    ARITHMETIC_EXPRESSION   go to state 98
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 55
    OR_EXPRESSION           go to state 99
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 44

   42 BOOLEAN_FACTOR: NOT . BOOLEAN_FACTOR

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 55
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 100
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 45

   63 CONSTANT: INTEGER .

    $default  reduce using rule 63 (CONSTANT)


State 46

   64 CONSTANT: STRING .

    $default  reduce using rule 64 (CONSTANT)


State 47

   59 VALUE: VAR_NAME .
   73 FUNCTION_CALL: VAR_NAME . LP RP
   74              | VAR_NAME . LP PARAMETERS RP

    LP  shift, and go to state 38

    $default  reduce using rule 59 (VALUE)


State 48

   62 CONSTANT: FLOAT_NUMBER .

    $default  reduce using rule 62 (CONSTANT)


State 49

   65 BOOLEAN_VAL: TRUE .

    $default  reduce using rule 65 (BOOLEAN_VAL)


State 50

   66 BOOLEAN_VAL: FALSE .

    $default  reduce using rule 66 (BOOLEAN_VAL)


State 51

   52 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION
   76 RETURN_STATEMENT: RETURN EXPRESSION .

    EQ  shift, and go to state 101

    $default  reduce using rule 76 (RETURN_STATEMENT)


State 52

   26 EXPRESSION: ARITHMETIC_EXPRESSION .
   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION . ADDITIVE_OPERATOR TERM
   46 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION . RELATIONAL_OPERATOR ARITHMETIC_EXPRESSION

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103
    LT   shift, and go to state 104
    LE   shift, and go to state 105
    GT   shift, and go to state 106
    GE   shift, and go to state 107

    $default  reduce using rule 26 (EXPRESSION)

    ADDITIVE_OPERATOR    go to state 108
    RELATIONAL_OPERATOR  go to state 109


State 53

   28 ARITHMETIC_EXPRESSION: TERM .
   29 TERM: TERM . MULTIPLICATIVE_OPERATOR FACTOR

    MUL  shift, and go to state 110
    DIV  shift, and go to state 111

    $default  reduce using rule 28 (ARITHMETIC_EXPRESSION)

    MULTIPLICATIVE_OPERATOR  go to state 112


State 54

   30 TERM: FACTOR .

    $default  reduce using rule 30 (TERM)


State 55

   25 EXPRESSION: LOGICAL_EXPRESSION .

    $default  reduce using rule 25 (EXPRESSION)


State 56

   37 LOGICAL_EXPRESSION: OR_EXPRESSION .
   38 OR_EXPRESSION: OR_EXPRESSION . OR AND_EXPRESSION

    OR  shift, and go to state 113

    OR        [reduce using rule 37 (LOGICAL_EXPRESSION)]
    $default  reduce using rule 37 (LOGICAL_EXPRESSION)


State 57

   39 OR_EXPRESSION: AND_EXPRESSION .
   40 AND_EXPRESSION: AND_EXPRESSION . AND BOOLEAN_FACTOR

    AND  shift, and go to state 114

    AND       [reduce using rule 39 (OR_EXPRESSION)]
    $default  reduce using rule 39 (OR_EXPRESSION)


State 58

   41 AND_EXPRESSION: BOOLEAN_FACTOR .

    $default  reduce using rule 41 (AND_EXPRESSION)


State 59

   44 BOOLEAN_FACTOR: RELATIONAL_EXPRESSION .

    $default  reduce using rule 44 (BOOLEAN_FACTOR)


State 60

   47 RELATIONAL_EXPRESSION: EQUIVALANCE_EXPRESSION .

    $default  reduce using rule 47 (RELATIONAL_EXPRESSION)


State 61

   32 FACTOR: VALUE .
   45 BOOLEAN_FACTOR: VALUE .

    AND        reduce using rule 32 (FACTOR)
    AND        [reduce using rule 45 (BOOLEAN_FACTOR)]
    OR         reduce using rule 32 (FACTOR)
    OR         [reduce using rule 45 (BOOLEAN_FACTOR)]
    RP         reduce using rule 32 (FACTOR)
    RP         [reduce using rule 45 (BOOLEAN_FACTOR)]
    SEMICOLON  reduce using rule 32 (FACTOR)
    SEMICOLON  [reduce using rule 45 (BOOLEAN_FACTOR)]
    EQ         reduce using rule 32 (FACTOR)
    EQ         [reduce using rule 45 (BOOLEAN_FACTOR)]
    $default   reduce using rule 32 (FACTOR)


State 62

   60 VALUE: CONSTANT .

    $default  reduce using rule 60 (VALUE)


State 63

   61 CONSTANT: BOOLEAN_VAL .

    $default  reduce using rule 61 (CONSTANT)


State 64

   77 RETURN_STATEMENT: RETURN FUNCTION_CALL .

    $default  reduce using rule 77 (RETURN_STATEMENT)


State 65

   78 PRIMITIVE_FUNCTION_CALL: GET_HEADINGS LP . RP

    RP  shift, and go to state 115


State 66

   79 PRIMITIVE_FUNCTION_CALL: GET_ALTITUDE LP . RP

    RP  shift, and go to state 116


State 67

   80 PRIMITIVE_FUNCTION_CALL: GET_TEMPERATURE LP . RP

    RP  shift, and go to state 117


State 68

   81 PRIMITIVE_FUNCTION_CALL: SET_VERTICALCLIMB LP . ARITHMETIC_EXPRESSION RP

    LP            shift, and go to state 118
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    ARITHMETIC_EXPRESSION  go to state 119
    TERM                   go to state 53
    FACTOR                 go to state 54
    VALUE                  go to state 120
    CONSTANT               go to state 62
    BOOLEAN_VAL            go to state 63


State 69

   82 PRIMITIVE_FUNCTION_CALL: SET_HORIZONTAL LP . ARITHMETIC_EXPRESSION RP

    LP            shift, and go to state 118
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    ARITHMETIC_EXPRESSION  go to state 121
    TERM                   go to state 53
    FACTOR                 go to state 54
    VALUE                  go to state 120
    CONSTANT               go to state 62
    BOOLEAN_VAL            go to state 63


State 70

   83 PRIMITIVE_FUNCTION_CALL: SET_HEADING LP . LOGICAL_EXPRESSION RP

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 122
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 71

   84 PRIMITIVE_FUNCTION_CALL: SET_SPRAY LP . LOGICAL_EXPRESSION RP

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 123
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 72

   85 PRIMITIVE_FUNCTION_CALL: CONNECT LP . STRING COMMA STRING RP

    STRING  shift, and go to state 124


State 73

   86 PRIMITIVE_FUNCTION_CALL: SLEEP LP . ARITHMETIC_EXPRESSION RP

    LP            shift, and go to state 118
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    ARITHMETIC_EXPRESSION  go to state 125
    TERM                   go to state 53
    FACTOR                 go to state 54
    VALUE                  go to state 120
    CONSTANT               go to state 62
    BOOLEAN_VAL            go to state 63


State 74

   87 PRIMITIVE_FUNCTION_CALL: SCAN_NEXT LP . RP

    RP  shift, and go to state 126


State 75

   88 PRIMITIVE_FUNCTION_CALL: PRINT_OUT LP . EXPRESSION RP

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 127
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 55
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 76

    0 $accept: PROGRAM $end .

    $default  accept


State 77

   69 FUNCTION_DEFINITION: FUNCTION . TYPE VAR_NAME LP ARGUMENTS RP LB STATEMENTS RB
   70                    | FUNCTION . TYPE VAR_NAME LP RP LB STATEMENTS RB

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    BOOL   shift, and go to state 9
    STR    shift, and go to state 10

    TYPE            go to state 128
    PRIMITIVE_TYPE  go to state 33


State 78

    3 STATEMENTS: STATEMENTS STATEMENT .

    $default  reduce using rule 3 (STATEMENTS)


State 79

    4 STATEMENTS: STATEMENTS FUNCTION_DEFINITION .

    $default  reduce using rule 4 (STATEMENTS)


State 80

   13 NON_IF_STATEMENT: DECLARATIVE_STATEMENT SEMICOLON .

    $default  reduce using rule 13 (NON_IF_STATEMENT)


State 81

   22 ASSIGNMENT_STATEMENT: DECLARATIVE_STATEMENT ASSIGN_OP . EXPRESSION
   23                     | DECLARATIVE_STATEMENT ASSIGN_OP . FUNCTION_CALL

    LP                 shift, and go to state 43
    NOT                shift, and go to state 44
    INTEGER            shift, and go to state 45
    STRING             shift, and go to state 46
    VAR_NAME           shift, and go to state 47
    FLOAT_NUMBER       shift, and go to state 48
    TRUE               shift, and go to state 49
    FALSE              shift, and go to state 50
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    EXPRESSION               go to state 129
    ARITHMETIC_EXPRESSION    go to state 52
    TERM                     go to state 53
    FACTOR                   go to state 54
    LOGICAL_EXPRESSION       go to state 55
    OR_EXPRESSION            go to state 56
    AND_EXPRESSION           go to state 57
    BOOLEAN_FACTOR           go to state 58
    RELATIONAL_EXPRESSION    go to state 59
    EQUIVALANCE_EXPRESSION   go to state 60
    VALUE                    go to state 61
    CONSTANT                 go to state 62
    BOOLEAN_VAL              go to state 63
    FUNCTION_CALL            go to state 130
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 82

   14 NON_IF_STATEMENT: ASSIGNMENT_STATEMENT SEMICOLON .

    $default  reduce using rule 14 (NON_IF_STATEMENT)


State 83

   17 DECLARATIVE_STATEMENT: TYPE VAR_NAME .

    $default  reduce using rule 17 (DECLARATIVE_STATEMENT)


State 84

   15 NON_IF_STATEMENT: FUNCTION_CALL SEMICOLON .

    $default  reduce using rule 15 (NON_IF_STATEMENT)


State 85

   16 NON_IF_STATEMENT: RETURN_STATEMENT SEMICOLON .

    $default  reduce using rule 16 (NON_IF_STATEMENT)


State 86

   12 NON_IF_STATEMENT: LB STATEMENTS RB .

    $default  reduce using rule 12 (NON_IF_STATEMENT)


State 87

   73 FUNCTION_CALL: VAR_NAME LP RP .

    $default  reduce using rule 73 (FUNCTION_CALL)


State 88

   59 VALUE: VAR_NAME .

    $default  reduce using rule 59 (VALUE)


State 89

   71 PARAMETERS: VALUE .

    $default  reduce using rule 71 (PARAMETERS)


State 90

   72 PARAMETERS: PARAMETERS . COMMA VALUE
   74 FUNCTION_CALL: VAR_NAME LP PARAMETERS . RP

    RP     shift, and go to state 131
    COMMA  shift, and go to state 132


State 91

   20 ASSIGNMENT_STATEMENT: VAR_NAME ASSIGN_OP EXPRESSION .
   52 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION

    EQ  shift, and go to state 101

    $default  reduce using rule 20 (ASSIGNMENT_STATEMENT)


State 92

   21 ASSIGNMENT_STATEMENT: VAR_NAME ASSIGN_OP FUNCTION_CALL .

    $default  reduce using rule 21 (ASSIGNMENT_STATEMENT)


State 93

   52 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION

    EQ  shift, and go to state 101


State 94

    7 MATCHED: IF LP LOGICAL_EXPRESSION . RP MATCHED ELSE MATCHED
    9 UNMATCHED: IF LP LOGICAL_EXPRESSION . RP STATEMENT
   10          | IF LP LOGICAL_EXPRESSION . RP MATCHED ELSE UNMATCHED
   25 EXPRESSION: LOGICAL_EXPRESSION .

    RP  shift, and go to state 133

    $default  reduce using rule 25 (EXPRESSION)


State 95

   18 ITERATIVE_STATEMENT: WHILE LP LOGICAL_EXPRESSION . RP MATCHED
   25 EXPRESSION: LOGICAL_EXPRESSION .

    RP  shift, and go to state 134

    $default  reduce using rule 25 (EXPRESSION)


State 96

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT . SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

    SEMICOLON  shift, and go to state 135


State 97

   24 EXPRESSION: LP EXPRESSION . RP
   52 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION

    RP  shift, and go to state 136
    EQ  shift, and go to state 101


State 98

   26 EXPRESSION: ARITHMETIC_EXPRESSION .
   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION . ADDITIVE_OPERATOR TERM
   31 FACTOR: LP ARITHMETIC_EXPRESSION . RP
   46 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION . RELATIONAL_OPERATOR ARITHMETIC_EXPRESSION

    RP   shift, and go to state 137
    ADD  shift, and go to state 102
    SUB  shift, and go to state 103
    LT   shift, and go to state 104
    LE   shift, and go to state 105
    GT   shift, and go to state 106
    GE   shift, and go to state 107

    RP        [reduce using rule 26 (EXPRESSION)]
    $default  reduce using rule 26 (EXPRESSION)

    ADDITIVE_OPERATOR    go to state 108
    RELATIONAL_OPERATOR  go to state 109


State 99

   37 LOGICAL_EXPRESSION: OR_EXPRESSION .
   38 OR_EXPRESSION: OR_EXPRESSION . OR AND_EXPRESSION
   43 BOOLEAN_FACTOR: LP OR_EXPRESSION . RP

    OR  shift, and go to state 113
    RP  shift, and go to state 138

    RP        [reduce using rule 37 (LOGICAL_EXPRESSION)]
    $default  reduce using rule 37 (LOGICAL_EXPRESSION)


State 100

   41 AND_EXPRESSION: BOOLEAN_FACTOR .
   42 BOOLEAN_FACTOR: NOT BOOLEAN_FACTOR .

    AND        reduce using rule 41 (AND_EXPRESSION)
    AND        [reduce using rule 42 (BOOLEAN_FACTOR)]
    OR         reduce using rule 41 (AND_EXPRESSION)
    OR         [reduce using rule 42 (BOOLEAN_FACTOR)]
    RP         reduce using rule 42 (BOOLEAN_FACTOR)
    SEMICOLON  reduce using rule 42 (BOOLEAN_FACTOR)
    EQ         reduce using rule 41 (AND_EXPRESSION)
    EQ         [reduce using rule 42 (BOOLEAN_FACTOR)]
    $default   reduce using rule 41 (AND_EXPRESSION)


State 101

   52 EQUIVALANCE_EXPRESSION: EXPRESSION EQ . EXPRESSION

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 139
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 55
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 102

   33 ADDITIVE_OPERATOR: ADD .

    $default  reduce using rule 33 (ADDITIVE_OPERATOR)


State 103

   34 ADDITIVE_OPERATOR: SUB .

    $default  reduce using rule 34 (ADDITIVE_OPERATOR)


State 104

   48 RELATIONAL_OPERATOR: LT .

    $default  reduce using rule 48 (RELATIONAL_OPERATOR)


State 105

   51 RELATIONAL_OPERATOR: LE .

    $default  reduce using rule 51 (RELATIONAL_OPERATOR)


State 106

   49 RELATIONAL_OPERATOR: GT .

    $default  reduce using rule 49 (RELATIONAL_OPERATOR)


State 107

   50 RELATIONAL_OPERATOR: GE .

    $default  reduce using rule 50 (RELATIONAL_OPERATOR)


State 108

   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION ADDITIVE_OPERATOR . TERM

    LP            shift, and go to state 118
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    TERM         go to state 140
    FACTOR       go to state 54
    VALUE        go to state 120
    CONSTANT     go to state 62
    BOOLEAN_VAL  go to state 63


State 109

   46 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION RELATIONAL_OPERATOR . ARITHMETIC_EXPRESSION

    LP            shift, and go to state 118
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    ARITHMETIC_EXPRESSION  go to state 141
    TERM                   go to state 53
    FACTOR                 go to state 54
    VALUE                  go to state 120
    CONSTANT               go to state 62
    BOOLEAN_VAL            go to state 63


State 110

   35 MULTIPLICATIVE_OPERATOR: MUL .

    $default  reduce using rule 35 (MULTIPLICATIVE_OPERATOR)


State 111

   36 MULTIPLICATIVE_OPERATOR: DIV .

    $default  reduce using rule 36 (MULTIPLICATIVE_OPERATOR)


State 112

   29 TERM: TERM MULTIPLICATIVE_OPERATOR . FACTOR

    LP            shift, and go to state 118
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    FACTOR       go to state 142
    VALUE        go to state 120
    CONSTANT     go to state 62
    BOOLEAN_VAL  go to state 63


State 113

   38 OR_EXPRESSION: OR_EXPRESSION OR . AND_EXPRESSION

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 55
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 143
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 114

   40 AND_EXPRESSION: AND_EXPRESSION AND . BOOLEAN_FACTOR

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 55
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 144
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 115

   78 PRIMITIVE_FUNCTION_CALL: GET_HEADINGS LP RP .

    $default  reduce using rule 78 (PRIMITIVE_FUNCTION_CALL)


State 116

   79 PRIMITIVE_FUNCTION_CALL: GET_ALTITUDE LP RP .

    $default  reduce using rule 79 (PRIMITIVE_FUNCTION_CALL)


State 117

   80 PRIMITIVE_FUNCTION_CALL: GET_TEMPERATURE LP RP .

    $default  reduce using rule 80 (PRIMITIVE_FUNCTION_CALL)


State 118

   31 FACTOR: LP . ARITHMETIC_EXPRESSION RP

    LP            shift, and go to state 118
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    ARITHMETIC_EXPRESSION  go to state 145
    TERM                   go to state 53
    FACTOR                 go to state 54
    VALUE                  go to state 120
    CONSTANT               go to state 62
    BOOLEAN_VAL            go to state 63


State 119

   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION . ADDITIVE_OPERATOR TERM
   81 PRIMITIVE_FUNCTION_CALL: SET_VERTICALCLIMB LP ARITHMETIC_EXPRESSION . RP

    RP   shift, and go to state 146
    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    ADDITIVE_OPERATOR  go to state 108


State 120

   32 FACTOR: VALUE .

    $default  reduce using rule 32 (FACTOR)


State 121

   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION . ADDITIVE_OPERATOR TERM
   82 PRIMITIVE_FUNCTION_CALL: SET_HORIZONTAL LP ARITHMETIC_EXPRESSION . RP

    RP   shift, and go to state 147
    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    ADDITIVE_OPERATOR  go to state 108


State 122

   25 EXPRESSION: LOGICAL_EXPRESSION .
   83 PRIMITIVE_FUNCTION_CALL: SET_HEADING LP LOGICAL_EXPRESSION . RP

    RP  shift, and go to state 148

    $default  reduce using rule 25 (EXPRESSION)


State 123

   25 EXPRESSION: LOGICAL_EXPRESSION .
   84 PRIMITIVE_FUNCTION_CALL: SET_SPRAY LP LOGICAL_EXPRESSION . RP

    RP  shift, and go to state 149

    $default  reduce using rule 25 (EXPRESSION)


State 124

   85 PRIMITIVE_FUNCTION_CALL: CONNECT LP STRING . COMMA STRING RP

    COMMA  shift, and go to state 150


State 125

   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION . ADDITIVE_OPERATOR TERM
   86 PRIMITIVE_FUNCTION_CALL: SLEEP LP ARITHMETIC_EXPRESSION . RP

    RP   shift, and go to state 151
    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    ADDITIVE_OPERATOR  go to state 108


State 126

   87 PRIMITIVE_FUNCTION_CALL: SCAN_NEXT LP RP .

    $default  reduce using rule 87 (PRIMITIVE_FUNCTION_CALL)


State 127

   52 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION
   88 PRIMITIVE_FUNCTION_CALL: PRINT_OUT LP EXPRESSION . RP

    RP  shift, and go to state 152
    EQ  shift, and go to state 101


State 128

   69 FUNCTION_DEFINITION: FUNCTION TYPE . VAR_NAME LP ARGUMENTS RP LB STATEMENTS RB
   70                    | FUNCTION TYPE . VAR_NAME LP RP LB STATEMENTS RB

    VAR_NAME  shift, and go to state 153


State 129

   22 ASSIGNMENT_STATEMENT: DECLARATIVE_STATEMENT ASSIGN_OP EXPRESSION .
   52 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION

    EQ  shift, and go to state 101

    $default  reduce using rule 22 (ASSIGNMENT_STATEMENT)


State 130

   23 ASSIGNMENT_STATEMENT: DECLARATIVE_STATEMENT ASSIGN_OP FUNCTION_CALL .

    $default  reduce using rule 23 (ASSIGNMENT_STATEMENT)


State 131

   74 FUNCTION_CALL: VAR_NAME LP PARAMETERS RP .

    $default  reduce using rule 74 (FUNCTION_CALL)


State 132

   72 PARAMETERS: PARAMETERS COMMA . VALUE

    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    VALUE        go to state 154
    CONSTANT     go to state 62
    BOOLEAN_VAL  go to state 63


State 133

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP . MATCHED ELSE MATCHED
    9 UNMATCHED: IF LP LOGICAL_EXPRESSION RP . STATEMENT
   10          | IF LP LOGICAL_EXPRESSION RP . MATCHED ELSE UNMATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENT                go to state 155
    MATCHED                  go to state 156
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 134

   18 ITERATIVE_STATEMENT: WHILE LP LOGICAL_EXPRESSION RP . MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 157
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 158
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 135

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON . LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 159
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 136

   24 EXPRESSION: LP EXPRESSION RP .

    $default  reduce using rule 24 (EXPRESSION)


State 137

   31 FACTOR: LP ARITHMETIC_EXPRESSION RP .

    $default  reduce using rule 31 (FACTOR)


State 138

   43 BOOLEAN_FACTOR: LP OR_EXPRESSION RP .

    $default  reduce using rule 43 (BOOLEAN_FACTOR)


State 139

   52 EQUIVALANCE_EXPRESSION: EXPRESSION . EQ EXPRESSION
   52                       | EXPRESSION EQ EXPRESSION .

    EQ  shift, and go to state 101

    EQ        [reduce using rule 52 (EQUIVALANCE_EXPRESSION)]
    $default  reduce using rule 52 (EQUIVALANCE_EXPRESSION)


State 140

   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION ADDITIVE_OPERATOR TERM .
   29 TERM: TERM . MULTIPLICATIVE_OPERATOR FACTOR

    MUL  shift, and go to state 110
    DIV  shift, and go to state 111

    $default  reduce using rule 27 (ARITHMETIC_EXPRESSION)

    MULTIPLICATIVE_OPERATOR  go to state 112


State 141

   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION . ADDITIVE_OPERATOR TERM
   46 RELATIONAL_EXPRESSION: ARITHMETIC_EXPRESSION RELATIONAL_OPERATOR ARITHMETIC_EXPRESSION .

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    $default  reduce using rule 46 (RELATIONAL_EXPRESSION)

    ADDITIVE_OPERATOR  go to state 108


State 142

   29 TERM: TERM MULTIPLICATIVE_OPERATOR FACTOR .

    $default  reduce using rule 29 (TERM)


State 143

   38 OR_EXPRESSION: OR_EXPRESSION OR AND_EXPRESSION .
   39              | AND_EXPRESSION .
   40 AND_EXPRESSION: AND_EXPRESSION . AND BOOLEAN_FACTOR

    AND  shift, and go to state 114

    AND       [reduce using rule 38 (OR_EXPRESSION)]
    OR        reduce using rule 38 (OR_EXPRESSION)
    OR        [reduce using rule 39 (OR_EXPRESSION)]
    EQ        reduce using rule 38 (OR_EXPRESSION)
    EQ        [reduce using rule 39 (OR_EXPRESSION)]
    $default  reduce using rule 38 (OR_EXPRESSION)


State 144

   40 AND_EXPRESSION: AND_EXPRESSION AND BOOLEAN_FACTOR .
   41               | BOOLEAN_FACTOR .

    AND       reduce using rule 40 (AND_EXPRESSION)
    AND       [reduce using rule 41 (AND_EXPRESSION)]
    OR        reduce using rule 40 (AND_EXPRESSION)
    OR        [reduce using rule 41 (AND_EXPRESSION)]
    EQ        reduce using rule 40 (AND_EXPRESSION)
    EQ        [reduce using rule 41 (AND_EXPRESSION)]
    $default  reduce using rule 40 (AND_EXPRESSION)


State 145

   27 ARITHMETIC_EXPRESSION: ARITHMETIC_EXPRESSION . ADDITIVE_OPERATOR TERM
   31 FACTOR: LP ARITHMETIC_EXPRESSION . RP

    RP   shift, and go to state 137
    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    ADDITIVE_OPERATOR  go to state 108


State 146

   81 PRIMITIVE_FUNCTION_CALL: SET_VERTICALCLIMB LP ARITHMETIC_EXPRESSION RP .

    $default  reduce using rule 81 (PRIMITIVE_FUNCTION_CALL)


State 147

   82 PRIMITIVE_FUNCTION_CALL: SET_HORIZONTAL LP ARITHMETIC_EXPRESSION RP .

    $default  reduce using rule 82 (PRIMITIVE_FUNCTION_CALL)


State 148

   83 PRIMITIVE_FUNCTION_CALL: SET_HEADING LP LOGICAL_EXPRESSION RP .

    $default  reduce using rule 83 (PRIMITIVE_FUNCTION_CALL)


State 149

   84 PRIMITIVE_FUNCTION_CALL: SET_SPRAY LP LOGICAL_EXPRESSION RP .

    $default  reduce using rule 84 (PRIMITIVE_FUNCTION_CALL)


State 150

   85 PRIMITIVE_FUNCTION_CALL: CONNECT LP STRING COMMA . STRING RP

    STRING  shift, and go to state 160


State 151

   86 PRIMITIVE_FUNCTION_CALL: SLEEP LP ARITHMETIC_EXPRESSION RP .

    $default  reduce using rule 86 (PRIMITIVE_FUNCTION_CALL)


State 152

   88 PRIMITIVE_FUNCTION_CALL: PRINT_OUT LP EXPRESSION RP .

    $default  reduce using rule 88 (PRIMITIVE_FUNCTION_CALL)


State 153

   69 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME . LP ARGUMENTS RP LB STATEMENTS RB
   70                    | FUNCTION TYPE VAR_NAME . LP RP LB STATEMENTS RB

    LP  shift, and go to state 161


State 154

   72 PARAMETERS: PARAMETERS COMMA VALUE .

    $default  reduce using rule 72 (PARAMETERS)


State 155

    9 UNMATCHED: IF LP LOGICAL_EXPRESSION RP STATEMENT .

    $default  reduce using rule 9 (UNMATCHED)


State 156

    5 STATEMENT: MATCHED .
    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED . ELSE MATCHED
   10 UNMATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED . ELSE UNMATCHED

    ELSE  shift, and go to state 162

    $default  reduce using rule 5 (STATEMENT)


State 157

    7 MATCHED: IF . LP LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED

    LP  shift, and go to state 163


State 158

   18 ITERATIVE_STATEMENT: WHILE LP LOGICAL_EXPRESSION RP MATCHED .

    $default  reduce using rule 18 (ITERATIVE_STATEMENT)


State 159

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION . SEMICOLON NON_IF_STATEMENT RP MATCHED
   25 EXPRESSION: LOGICAL_EXPRESSION .

    SEMICOLON  shift, and go to state 164

    $default  reduce using rule 25 (EXPRESSION)


State 160

   85 PRIMITIVE_FUNCTION_CALL: CONNECT LP STRING COMMA STRING . RP

    RP  shift, and go to state 165


State 161

   69 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP . ARGUMENTS RP LB STATEMENTS RB
   70                    | FUNCTION TYPE VAR_NAME LP . RP LB STATEMENTS RB

    RP     shift, and go to state 166
    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    BOOL   shift, and go to state 9
    STR    shift, and go to state 10

    TYPE            go to state 167
    PRIMITIVE_TYPE  go to state 33
    ARGUMENTS       go to state 168


State 162

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE . MATCHED
   10 UNMATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE . UNMATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 169
    UNMATCHED                go to state 170
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 163

    7 MATCHED: IF LP . LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED

    LP            shift, and go to state 43
    NOT           shift, and go to state 44
    INTEGER       shift, and go to state 45
    STRING        shift, and go to state 46
    VAR_NAME      shift, and go to state 88
    FLOAT_NUMBER  shift, and go to state 48
    TRUE          shift, and go to state 49
    FALSE         shift, and go to state 50

    EXPRESSION              go to state 93
    ARITHMETIC_EXPRESSION   go to state 52
    TERM                    go to state 53
    FACTOR                  go to state 54
    LOGICAL_EXPRESSION      go to state 171
    OR_EXPRESSION           go to state 56
    AND_EXPRESSION          go to state 57
    BOOLEAN_FACTOR          go to state 58
    RELATIONAL_EXPRESSION   go to state 59
    EQUIVALANCE_EXPRESSION  go to state 60
    VALUE                   go to state 61
    CONSTANT                go to state 62
    BOOLEAN_VAL             go to state 63


State 164

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON . NON_IF_STATEMENT RP MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    NON_IF_STATEMENT         go to state 172
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 165

   85 PRIMITIVE_FUNCTION_CALL: CONNECT LP STRING COMMA STRING RP .

    $default  reduce using rule 85 (PRIMITIVE_FUNCTION_CALL)


State 166

   70 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP RP . LB STATEMENTS RB

    LB  shift, and go to state 173


State 167

   67 ARGUMENTS: TYPE . VAR_NAME

    VAR_NAME  shift, and go to state 174


State 168

   68 ARGUMENTS: ARGUMENTS . COMMA TYPE VAR_NAME
   69 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS . RP LB STATEMENTS RB

    RP     shift, and go to state 175
    COMMA  shift, and go to state 176


State 169

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE MATCHED .

    $default  reduce using rule 7 (MATCHED)


State 170

   10 UNMATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE UNMATCHED .

    $default  reduce using rule 10 (UNMATCHED)


State 171

    7 MATCHED: IF LP LOGICAL_EXPRESSION . RP MATCHED ELSE MATCHED
   25 EXPRESSION: LOGICAL_EXPRESSION .

    RP  shift, and go to state 177

    $default  reduce using rule 25 (EXPRESSION)


State 172

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT . RP MATCHED

    RP  shift, and go to state 178


State 173

   70 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP RP LB . STATEMENTS RB

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENTS               go to state 179
    STATEMENT                go to state 25
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 174

   67 ARGUMENTS: TYPE VAR_NAME .

    $default  reduce using rule 67 (ARGUMENTS)


State 175

   69 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP . LB STATEMENTS RB

    LB  shift, and go to state 180


State 176

   68 ARGUMENTS: ARGUMENTS COMMA . TYPE VAR_NAME

    VOID   shift, and go to state 6
    INT    shift, and go to state 7
    FLOAT  shift, and go to state 8
    BOOL   shift, and go to state 9
    STR    shift, and go to state 10

    TYPE            go to state 181
    PRIMITIVE_TYPE  go to state 33


State 177

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP . MATCHED ELSE MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 157
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 182
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 178

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP . MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 157
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 183
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 179

    3 STATEMENTS: STATEMENTS . STATEMENT
    4           | STATEMENTS . FUNCTION_DEFINITION
   70 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP RP LB STATEMENTS . RB

    LB                 shift, and go to state 1
    RB                 shift, and go to state 184
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    FUNCTION           shift, and go to state 77
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENT                go to state 78
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_DEFINITION      go to state 79
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 180

   69 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP LB . STATEMENTS RB

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENTS               go to state 185
    STATEMENT                go to state 25
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 181

   68 ARGUMENTS: ARGUMENTS COMMA TYPE . VAR_NAME

    VAR_NAME  shift, and go to state 186


State 182

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED . ELSE MATCHED

    ELSE  shift, and go to state 187


State 183

   19 ITERATIVE_STATEMENT: FOR LP NON_IF_STATEMENT SEMICOLON LOGICAL_EXPRESSION SEMICOLON NON_IF_STATEMENT RP MATCHED .

    $default  reduce using rule 19 (ITERATIVE_STATEMENT)


State 184

   70 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP RP LB STATEMENTS RB .

    $default  reduce using rule 70 (FUNCTION_DEFINITION)


State 185

    3 STATEMENTS: STATEMENTS . STATEMENT
    4           | STATEMENTS . FUNCTION_DEFINITION
   69 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP LB STATEMENTS . RB

    LB                 shift, and go to state 1
    RB                 shift, and go to state 188
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 3
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    FUNCTION           shift, and go to state 77
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    STATEMENT                go to state 78
    MATCHED                  go to state 26
    UNMATCHED                go to state 27
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_DEFINITION      go to state 79
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 186

   68 ARGUMENTS: ARGUMENTS COMMA TYPE VAR_NAME .

    $default  reduce using rule 68 (ARGUMENTS)


State 187

    7 MATCHED: IF LP LOGICAL_EXPRESSION RP MATCHED ELSE . MATCHED

    LB                 shift, and go to state 1
    VAR_NAME           shift, and go to state 2
    IF                 shift, and go to state 157
    WHILE              shift, and go to state 4
    FOR                shift, and go to state 5
    VOID               shift, and go to state 6
    INT                shift, and go to state 7
    FLOAT              shift, and go to state 8
    BOOL               shift, and go to state 9
    STR                shift, and go to state 10
    RETURN             shift, and go to state 11
    GET_HEADINGS       shift, and go to state 12
    GET_ALTITUDE       shift, and go to state 13
    GET_TEMPERATURE    shift, and go to state 14
    SET_VERTICALCLIMB  shift, and go to state 15
    SET_HORIZONTAL     shift, and go to state 16
    SET_HEADING        shift, and go to state 17
    SET_SPRAY          shift, and go to state 18
    CONNECT            shift, and go to state 19
    SLEEP              shift, and go to state 20
    SCAN_NEXT          shift, and go to state 21
    PRINT_OUT          shift, and go to state 22

    MATCHED                  go to state 169
    NON_IF_STATEMENT         go to state 28
    DECLARATIVE_STATEMENT    go to state 29
    ITERATIVE_STATEMENT      go to state 30
    ASSIGNMENT_STATEMENT     go to state 31
    TYPE                     go to state 32
    PRIMITIVE_TYPE           go to state 33
    FUNCTION_CALL            go to state 34
    RETURN_STATEMENT         go to state 35
    PRIMITIVE_FUNCTION_CALL  go to state 36


State 188

   69 FUNCTION_DEFINITION: FUNCTION TYPE VAR_NAME LP ARGUMENTS RP LB STATEMENTS RB .

    $default  reduce using rule 69 (FUNCTION_DEFINITION)
